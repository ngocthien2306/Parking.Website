@using InfrastructureCore.Models.Identity;
@using InfrastructureCore.Models.Menu;
@using Modules.Common.Models;
@using Microsoft.AspNetCore.Mvc.Localization;
@using Modules.Admin.Models;

@{
    //Layout = "~/Views/Shared/_Layout.cshtml";
    Layout = null;
    var currentUser = (SYLoggedUser)ViewBag.CurrentUser;
    string superAdmin = "G000C001";

    SYMenuAccess pageSetting = new SYMenuAccess();
    pageSetting.SAVE_YN = true;

    //Add Readload Button
    List<ToolbarInfo> lstNewToolbar = new List<ToolbarInfo>();
    ToolbarInfo info = new ToolbarInfo();
    info.Name = "Reload";
    info.ID = "btnReload";
    info.Icon = "<i class='fas fa-sync'></i>";
    info.MenuID = ViewBag.MenuID;
    lstNewToolbar.Add(info);
}

<script>
    $("#btnReload_@ViewBag.Thread").on("click", function () {
        RefreshTab(this);
    });

    $(function () {
        LoadingPage(1);
         
        if ('@superAdmin' !== '@currentUser.UserType') {
          
            var siteID = '@currentUser.SiteID';
            var treeView = getDataTreeViewInstance();
            var dataGrid = getDataGridInstanceUserAccess();

            $.ajax({
                url: '@Url.Action("GetListMenuData", "UserAccessMenu")',
                type: "GET",
                data: { siteID: siteID },
                dataType: 'json',
                success: function (result) {
                    treeView.option("dataSource", result);
                }
            });

            $.ajax({
                url: '@Url.Action("GetListDataUserBySite", "UserAccessMenu")',
                type: "GET",
                data: { siteID: siteID },
                dataType: 'json',
                success: function (result) {
                    dataGrid.option("dataSource", result.data);
                }
            });
        }
        LoadingPage(0);
    });

    function getDataGridInstanceUserAccess() {
        LoadingPage(1);
        return $("#DataGridUserAtUserAccessMenu").dxDataGrid("instance");
        LoadingPage(0);
    }

    function getDataTreeViewInstance() {
        LoadingPage(1);
        return $("#treeViewMenuUserAccess").dxTreeView("instance");
        LoadingPage(0);
    }

    function treeViewItemClick(e) {
        var dataRow = e.itemData;
         
        $.ajax({
            url: '@Url.Action("GetListUserSeleted", "UserAccessMenu")',
            type: "GET",
            data: { menuId: dataRow.MenuID },
            dataType: "json",
            success: function (rs) {
                $.ajax({
                    url: '@Url.Action("GetListDataUserBySite", "UserAccessMenu")',
                    type: "GET",
                    data: { siteID: dataRow.SiteID },
                    dataType: 'json',
                    success: function (result) {
                        dataGrid.option("dataSource", result.data);
                    }
                });


                 
                var dataGrid = getDataGridInstanceUserAccess();
                var data = dataGrid.getDataSource().items();
                console.log(data);
                var arrKey = [];
                $.each(data, function (index1, item1) {
                    item1.SEARCH_YN = false;
                    item1.CREATE_YN = false;
                    item1.SAVE_YN = false;
                    item1.DELETE_YN = false;
                    item1.EDIT_YN = false;
                    item1.EXCEL_YN = false;
                    item1.PRINT_YN = false;
                    $.each(rs.data, function (index, item) {
                        if (item.USER_ID === item1.USER_ID) {
                      
                            item1.SEARCH_YN = item.SEARCH_YN;
                            item1.CREATE_YN = item.CREATE_YN;
                            item1.SAVE_YN = item.SAVE_YN;
                            item1.DELETE_YN = item.DELETE_YN;
                            item1.EDIT_YN = item.EDIT_YN;
                            item1.EXCEL_YN = item.EXCEL_YN;
                            item1.PRINT_YN = item.PRINT_YN;
                            arrKey.push(item1.USER_ID);
                        }
                    })

                });

                setTimeout(function () {
                    dataGrid.option("dataSource", data);
                    dataGrid.selectRows(arrKey);
                }, 300);
            }
        });
    }

    $('#btnSave_@ViewBag.Thread').on("click", function () {
        SetUserAccessMenu();
    });

    // Set User access Menu
    function SetUserAccessMenu() {
        var treeMenu = getDataTreeViewInstance();
        if (treeMenu.getSelectedNodes().length == 0) {
            DevExpress.ui.dialog.alert("Please select Menu!", "Error");
        }
        else {
            var menuId = treeMenu.getSelectedNodes()[0].itemData.MenuID;
            var dataGrid = getDataGridInstanceUserAccess();
            var data = dataGrid.getSelectedRowsData();

            var result = DevExpress.ui.dialog.confirm("<i>@MessageCode.MD0003</i>", "Confirm changes");
            result.done(function (dialogResult) {
                if (dialogResult) {
                    $.ajax({
                        url: '@Url.Action("SetUserAccessMenu", "UserAccessMenu")',
                        type: "POST",
                        data: { data: data, menuId: menuId },
                        dataType: "json",
                        success: function (rs) {
                            if (rs.Success == true) {
                                DevExpress.ui.dialog.alert("Save Successs", "Success");
                            }
                            else {
                                DevExpress.ui.dialog.alert("Save Fail", "Error");
                            }
                        }
                    });
                } else {
                    return;
                }
            });
        }
    }

    function onSiteChange(e) {
         
        var siteID = e.value;
        var treeView = getDataTreeViewInstance();
        var dataGrid = getDataGridInstanceUserAccess();
         
        $.ajax({
            url: '@Url.Action("GetListMenuData", "UserAccessMenu")',
            type: "GET",
            data: { siteID: siteID },
            dataType: 'json',
            success: function (result) {
                treeView.option("dataSource", result);
            }
        });

        $.ajax({
            url: '@Url.Action("GetListDataUserBySite", "UserAccessMenu")',
            type: "GET",
            data: { siteID: siteID },
            dataType: 'json',
            success: function (result) {
                dataGrid.option("dataSource", result.data);
            }
        });
    }

</script>

@*@await Component.InvokeAsync("AccessToolbar")*@
@*@await Component.InvokeAsync("AccessToolbar", new { pageSetting = pageSetting })*@
@*@await Component.InvokeAsync("AccessToolbar", new { pageSetting = pageSetting ,threadID = ViewBag.Thread })*@
@await Component.InvokeAsync("AccessToolbar", new { pageSetting = pageSetting, lstNewToolbar = lstNewToolbar, threadID = ViewBag.Thread })
<div class="content">
    <div class="container-fluid">
        @if (currentUser.UserType == superAdmin)
        {
            <div class="row">
                <div class="col-md-3">
                    <div class="dx-field">
                        <div class="dx-field-label">@_loc.GetLocalizedString("Site")</div>
                        <div class="dx-field-value">
                            @(Html.DevExtreme().SelectBox()
                                .ID("ddlSiteUserAccessMenu")
                                .DataSource(d => d.Mvc().Controller("Site").LoadAction("GetListData"))
                                .DisplayExpr("SiteName")
                                .ValueExpr("SiteID")
                                .OnValueChanged("onSiteChange")
                                .SearchEnabled(true)
                                .DataSourceOptions(o => o.Paginate(true).PageSize(10))
                            )
                        </div>
                    </div>
                </div>
                <div class="col-md-9">
                </div>
            </div>
        }

        <div class="row">
            <div class="col-md-3">
                <div class="card">
                    <div class="card-header">
                        <div class="row">
                            <div class="col-md-12">
                                <h6 localize-content>@_loc.GetLocalizedString("List Menu Data")</h6>
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-12">
                                @(Html.DevExtreme().TreeView()
                                    .ID("treeViewMenuUserAccess")
                                    .KeyExpr("MenuID")
                                    .DisplayExpr("MenuName")
                                    .ParentIdExpr("MenuParentID")
                                    .SelectedExpr("Selected")
                                     .SelectionMode(NavSelectionMode.Single)
                                    .SelectByClick(true)
                                    .ExpandedExpr("Expanded")
                                    .Width(340)
                                    .Height(320)
                                    .SearchEnabled(true)
                                    .DataStructure(TreeViewDataStructure.Plain)
                                    .OnItemClick("treeViewItemClick")
                                )
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-9">
                <div class="card">
                    <div class="card-header">
                        <div class="row">
                            <div class="col-md-12">
                                <h6 localize-content>List User Data</h6>
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    @(Html.DevExtreme().DataGrid<SYUserAccessMenus>()
                                        .ID("DataGridUserAtUserAccessMenu")
                                        .ShowBorders(true)
                                        .ShowRowLines(true)
                                        .AllowColumnResizing(true)
                                        .FilterRow(filterRow => filterRow
                                            .Visible(true)
                                            .ApplyFilter(GridApplyFilterMode.Auto)
                                        )
                                        .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Virtual))
                                        .Height(500)
                                        .KeyExpr("USER_ID")
                                        .RepaintChangesOnly(true)
                                        .Selection(s => s.Mode(SelectionMode.Multiple).ShowCheckBoxesMode(GridSelectionShowCheckBoxesMode.Always).SelectAllMode(SelectAllMode.AllPages))
                                        .Scrolling(s => s.Mode(GridScrollingMode.Standard))
                                        .Editing(editing =>
                                        {
                                            editing.Mode(GridEditMode.Cell);
                                            editing.AllowUpdating(true);
                                        })
                                        .Columns(columns =>
                                        {
                                            columns.AddFor(m => m.USER_CODE).Caption(_loc.GetLocalizedString("UserCode")).AllowEditing(false);
                                            columns.AddFor(m => m.USER_NAME).Caption(_loc.GetLocalizedString("UserName")).AllowEditing(false);
                                            columns.AddFor(m => m.SEARCH_YN).Caption(_loc.GetLocalizedString("SearchYN")).DataType(GridColumnDataType.Boolean);
                                            columns.AddFor(m => m.CREATE_YN).Caption(_loc.GetLocalizedString("CreateYN")).DataType(GridColumnDataType.Boolean);
                                            columns.AddFor(m => m.SAVE_YN).Caption(_loc.GetLocalizedString("SaveYN")).DataType(GridColumnDataType.Boolean);
                                            columns.AddFor(m => m.DELETE_YN).Caption(_loc.GetLocalizedString("DeleteYN")).DataType(GridColumnDataType.Boolean);
                                            columns.AddFor(m => m.EDIT_YN).Caption(_loc.GetLocalizedString("EditYN")).DataType(GridColumnDataType.Boolean);
                                            columns.AddFor(m => m.EXCEL_YN).Caption(_loc.GetLocalizedString("ExcelYN")).DataType(GridColumnDataType.Boolean);
                                            columns.AddFor(m => m.PRINT_YN).Caption(_loc.GetLocalizedString("PrintYN")).DataType(GridColumnDataType.Boolean);

                                        })
                                        .HeaderFilter(f => f.Visible(true))
                                        .Paging(paging => paging.PageSize(500))
                                        //.Pager(pager =>
                                        //{
                                        //    pager.ShowPageSizeSelector(false);
                                        //    pager.AllowedPageSizes(new[] { 20, 50, 100 });
                                        //    pager.ShowInfo(true);
                                        //})
                                    )
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
