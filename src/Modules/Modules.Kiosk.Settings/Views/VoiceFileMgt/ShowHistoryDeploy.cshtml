@using Modules.Pleiger.CommonModels.Models

@model KIO_ClientSoundMgt;
@{
    Layout = null;
    string gridDeployHistory = "gridDeployHistory" + ViewBag.Thread;
}
<script>
    $(document).ready(function () {
        LoadingPage(1);
        GetSoundDeployHist("@ViewBag.SoundNo");
        LoadingPage(0);
    })
    function GridHistoryDeployIntance() {
        return $("#@gridDeployHistory").dxDataGrid("instance");
    }
    //Region: Btn event

    // End Region: Btn event

    // Region: Get soundId
    function GetSoundDeployHist(soundId) {
        LoadingPage(1);
        //GridHistoryDeployIntance().selectRows();
        var url = '@Url.Action("GetSoundDeployHist", "VoiceFileMgt")';
        var obj = {
            soundId: soundId,
        }
        LoadGridData(url, obj, "#@gridDeployHistory", METHOD.GET);
    }
    // End Region: Get Data
</script>

<div class="modal-content" style=" overflow-y:scroll; max-height:95vh; width:95%; margin: 0 auto">
    <div class="modal-header">
        <h5 class="modal-title" id="SalesProjectCreatePopup">@(_loc.GetLocalizedString("음성파일 정보"))</h5>@*--영업 수주 프로젝트 세부내역*@
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
    <div class="modal-body">
        <div class="row" id="divindex_@(ViewBag.Thread)">
            <div class="col-md-12" style="width:100%;height:100%;">
                <div class="card" style="height:100%;width:100%;">
                    <div id="bodypage_@(ViewBag.Thread)" class="mr-2 ml-2" style="height:100%">
                        <div class="row" style="height:55vh">
                            <div class="col-md-12">
                                @(
                                    Html.DevExtreme().DataGrid<KIO_StoreDeployHistory>()
                                    .ID(gridDeployHistory)
                                    .ShowBorders(true)
                                    .ShowColumnLines(true)
                                    .Height("50vh")
                                    .ShowRowLines(true)
                                    .AllowColumnResizing(true)
                                    .AllowColumnReordering(true)
                                    .RemoteOperations(true)
                                    .ColumnAutoWidth(true)
                                    .ColumnFixing(c => c.Enabled(true))
                                    .RepaintChangesOnly(true)
                                    .Selection(s => s.Mode(SelectionMode.Single))
                                    .Columns(c =>
                                    {
                                        c.AddFor(x => x.soundDeplyHistNo).Caption(_loc.GetLocalizedString("No"));
                                        c.AddFor(x => x.location).Caption(_loc.GetLocalizedString("Location"));
                                        c.AddFor(x => x.storeName).Caption(_loc.GetLocalizedString("Store Name"));
                                        c.AddFor(x => x.deviceName).Caption(_loc.GetLocalizedString("Device Name"));
                                        c.AddFor(x => x.deployTime).Caption(_loc.GetLocalizedString("Deploy Time")).Format("yyyy-MM-dd").Alignment(0);
                                        c.Add().Caption(_loc.GetLocalizedString("Deploy Result")).CalculateCellValue(@<text>
                                            function(data) {
                                                return data.deployResult == true ? "@_loc.GetLocalizedString("Success")" : "@_loc.GetLocalizedString("Failure")";
                                            }
                                        </text>);
                                    })
                                    .Pager(pager =>
                                    {
                                        pager.ShowInfo(true);
                                        pager.ShowNavigationButtons(true);
                                    })
                                    //.OnSelectionChanged("onItemGridSelectionChanged")
                                    //.OnToolbarPreparing("onItemGridToolbarPreparing")
                                    .Paging(paging => paging.PageSize(100))
                                    )

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="modal-footer">
@*        <button type="button" id="btnSave_@ViewBag.Thread" class="btn btn-sm btn-primary"><i class='fa fa-save'></i> @(_loc.GetLocalizedString("Save"))</button>
        <button type="button" id="btnDelete_@ViewBag.Thread" class="btn btn-sm btn-primary"><i class='fa fa-trash'></i> @(_loc.GetLocalizedString("Delete"))</button>*@
        <button type="button" class="btn btn-sm btn-secondary" data-dismiss="modal"><i class='fa fa-times'></i> @(_loc.GetLocalizedString("Close"))</button>
    </div>
</div>



