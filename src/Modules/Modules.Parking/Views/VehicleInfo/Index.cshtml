@using Modules.Pleiger.CommonModels;
@using Modules.Common.Models;
@using Modules.Admin.Models;
@using InfrastructureCore.Models.Menu;
@using Modules.Pleiger.CommonModels.Models
@{
    Layout = null;
    SYMenuAccess pageSetting = new SYMenuAccess();
    pageSetting.SAVE_YN = true;
    pageSetting.CREATE_YN = true;

    List<ToolbarInfo> lstNewToolbar = new List<ToolbarInfo>();
    ToolbarInfo info = new ToolbarInfo();
    info.Name = "Reload";
    info.ID = "btnReload";
    info.Icon = "<i class='fas fa-sync'></i>";
    info.MenuID = ViewBag.MenuID;
    lstNewToolbar.Add(info);
    // grid info
    string gridParking = "gridParking" + ViewBag.Thread;
    string gridUserMgt = "gridUserMgt" + ViewBag.Thread;

    // info store
    string storeName = "storeName" + ViewBag.Thread;
    string zipCode = "zipCode" + ViewBag.Thread;
    string address1 = "address1" + ViewBag.Thread;
    string address2 = "address2" + ViewBag.Thread;
    string location = "location" + ViewBag.Thread;
    string bizNumber = "bizNumber" + ViewBag.Thread;
    string bizPhoneNumber = "bizPhoneNumber" + ViewBag.Thread;
    string openDate = "openDate" + ViewBag.Thread;
    string memo = "memo" + ViewBag.Thread;
    string registDate = "registDate" + ViewBag.Thread;

    string monitoringStartime = "monitoringStartime" + ViewBag.Thread;
    string monitoringEndtime = "monitoringEndtime" + ViewBag.Thread;

    // btn
    string btnCreateOrDetail = "btnCreateOrDetail" + ViewBag.Thread;

}
<style type="text/css" class="cssStyles">
</style>

<script>

    var storeNoMaster;

    $(document).ready(function () {
        LoadingPage(1);

        LoadComboBoxLocation();
        $('#btnSave_@(ViewBag.Thread)').prop('disabled', true);
        LoadingPage(0);
    })

    // Region: btn click event
    $('#btnSave_@(ViewBag.Thread)').on('click', function () {
        LoadingPage(1);

        LoadingPage(0);
    });

    $("#btnReload_@ViewBag.Thread").on("click", function () {
        LoadingPage(1);
        CheckSession();
        RefreshTab(this);
        LoadingPage(0);
    });

    $('#btnCreate_@(ViewBag.Thread)').on('click', function () {
        LoadingPage(1);

        LoadingPage(0);
    });

    function EnableCreateBtn() {
        $("#@btnCreateOrDetail").dxButton("instance").option("disabled", false);

    }
    // End Region: btn click event

    // Region: Get Data
    function LoadComboBoxLocation() {
        debugger;
        var url = '@Url.Action("GetCommonCode", "CommonCodeMgt")'
        LoadDataCommboBox("LCT000", url, '#@location', true);
    }
    function GetDataStoreMaster(e) {
        LoadingPage(1);
        storeNoMaster = e.data.storeNo;
        // remove selected row
        GetGridIntance("#@gridUserMgt").selectRows();
        GetDataUserMgt(e.data.storeNo);
        BiddingDataStoreMaster(e.data.storeNo);
        $('#btnSave_@(ViewBag.Thread)').prop('disabled', false);
    }

    function GetDataUserMgt(storeNo) {
        $.ajax({
            url: '@Url.Action("GetUserStoreMgt", "StoreMgt")',
            type: "GET",
            data: {
                storeNo: storeNo
            },
            dataType: 'json',
            success: function (result) {
                debugger;
                GetGridIntance("#@gridUserMgt").option("dataSource", result);
                if(result.length != 0) {
                     $("#@btnCreateOrDetail").dxButton("instance").option("disabled", true);
                     $("#@btnCreateOrDetail").dxButton("instance").option("text", "@_loc.GetLocalizedString("Detail")");

                }
                else {
                    $("#@btnCreateOrDetail").dxButton("instance").option("disabled", false);
                    $("#@btnCreateOrDetail").dxButton("instance").option("text", "@_loc.GetLocalizedString("Create 1")");
                }
                LoadingPage(0);
            },
            error: function () {
                LoadingPage(0);
            }
        });
    }

    function BiddingDataStoreMaster(storeNo) {
        debugger;
        $.ajax({
            url: '@Url.Action("GetStoreMasters", "StoreMgt")',
            type: METHOD.POST,
            data: {
                storeNo: storeNo
            },
            dataType: 'json',
            success: function (result) {
                debugger;

                SetDataElement("#@storeName", result[0].storeName);
                SetDataElement("#@location", result[0].location);
                SetDataElement("#@zipCode", result[0].zipCode);
                SetDataElement("#@address1", result[0].address1);
                SetDataElement("#@address2", result[0].address2);
                SetDataElement("#@bizNumber", result[0].bizNumber);
                SetDataElement("#@bizPhoneNumber", result[0].bizPhoneNumber);
                SetDataElement("#@openDate", result[0].openDate);
                SetDataElement("#@memo", result[0].memo);
                SetDataElement("#@registDate", result[0].registDate);
                SetDataElement("#@monitoringEndtime", result[0].monitoringEndtime);
                SetDataElement("#@monitoringStartime", result[0].monitoringStartime);

                LoadingPage(0);
            },
            error: function () {
                LoadingPage(0);
            }
        });
    }

    function ShowUserStoreMgtDetail(storeNo, userId) {
        var url = '@Url.Action("ShowUserStoreMgtDetail", "StoreMgt")';
        var obj = {
            storeNo: storeNo,
            userId: userId,
            viewbagIndex: '@ViewBag.Thread',
            menuParent: '@ViewBag.MenuId'
        }
        OpenPopup(url, obj, METHOD.GET);
    }
    function OpenStoreMgtDetail(e) {
        debugger;
        var gridStore = GetGridIntance("#@gridParking").getSelectedRowsData();
        if (gridStore.length < 1) {
            DevExpress.ui.dialog.alert('@(_loc.GetLocalizedString(MessageCode.ME0001))', '@(_loc.GetLocalizedString("Message"))');
            return;
        }
        ShowUserStoreMgtDetail(gridStore[0].storeNo, e.data.userId);
    }
    // End Region: Get Data

    // Region: Create - Update - Delete
    function onItemGridToolbarPreparingUser(e) {
        debugger;
        var toolbarItems = e.toolbarOptions.items;
        toolbarItems.unshift(
            {
                visible: true,
                widget: "dxButton",
                options: {
                    elementAttr: {
                        id: "@btnCreateOrDetail"
                    },
                    text: "@_loc.GetLocalizedString("Create 1")",
                    onClick: function () {
                        debugger;
                        var gridUserMgt = GetGridIntance("#@gridUserMgt").getSelectedRowsData();
                        var gridStore = GetGridIntance("#@gridParking").getSelectedRowsData();

                        if (gridStore.length < 1) {
                            DevExpress.ui.dialog.alert('@(_loc.GetLocalizedString(MessageCode.ME0001))', '@(_loc.GetLocalizedString("Message"))');
                            return;
                        }
                        if (gridUserMgt.length == 0) {
                            ShowUserStoreMgtDetail(null, null);

                        }
                        else if (gridUserMgt.length > 0) {
                            ShowUserStoreMgtDetail(gridUserMgt[0].storeNo, gridUserMgt[0].userId);

                        }
                    },
                    icon: "fa fa-plus"
                },
                location: "after"
            }
        )

    }

    function RequestStoreMaster(obj, storeNo) {
        $.ajax({
            url: '@Url.Action("RequestStoreMaster", "StoreMgt")',
            type: "GET",
            data: {
                storeMaster: JSON.stringify(obj),
                storeNo: storeNo
            },
            dataType: 'json',
            async: false,
            success: function (result) {
                debugger;
                if (result.Success) {
                    setTimeout(function () {
                        DevExpress.ui.notify(
                            {
                                message: '@_loc.GetLocalizedString("Send information synchronous to Kiosk devices successfully!")',
                                position: {
                                    my: 'bottom right',
                                    at: 'bottom right'
                                },
                                width: '30%'
                            },
                            'success',
                            6000
                        );
                    }, 5000);
                }
                else {
                    setTimeout(function () {
                        DevExpress.ui.notify(
                            {
                                message: '@_loc.GetLocalizedString("Send information synchronous to Kiosk devices fairly!")',
                                position: {
                                    my: 'bottom right',
                                    at: 'bottom right'
                                },
                                width: '30%'
                            },
                            'error',
                            6000
                        );
                    }, 5000);
                }
                LoadingPage(0);
            },
            error: function () {
                LoadingPage(0);
            }
        });
    }


    function CreateStoreMaster() {
        SetDataElement("#@storeName", "");
        SetDataElement("#@location", "");
        SetDataElement("#@zipCode", "");
        SetDataElement("#@address1", "");
        SetDataElement("#@address2", "");
        SetDataElement("#@bizNumber", "");
        SetDataElement("#@bizPhoneNumber", "");
        SetDataElement("#@openDate", "");
        SetDataElement("#@memo", "");
        SetDataElement("#@registDate", "");
        SetDataElement("#@monitoringStartime", "");
        SetDataElement("#@monitoringEndtime", "");
        GetGridIntance("#@gridUserMgt").option("dataSource", null);
        GetGridIntance("#@gridParking").selectRows();

        $('#btnSave_@(ViewBag.Thread)').prop('disabled', false);
    }

    function SaveStoreMaster() {
        if (ValidationInputStoreMaster()) {
            var yes_or_no = DevExpress.ui.dialog.confirm("@(_loc.GetLocalizedString(MessageCode.MD0003))", '@(_loc.GetLocalizedString("Notice"))');
            yes_or_no.done(function (dialogResult) {
                if (dialogResult) {
                    debugger;
                    var gridStore = GetGridIntance("#@gridParking").getSelectedRowsData();
                    var storeNo = gridStore.length == 0 ? null : gridStore[0].storeNo;
                    var url = '@Url.Action("SaveStoreMaster", "StoreMgt")';
                    var obj = {
                        storeName: GetDataElement("#@storeName"),
                        storeNo: storeNo,
                        location: GetDataElement("#@location"),
                        zipCode: GetDataElement("#@zipCode"),
                        address1: GetDataElement("#@address1"),
                        address2: GetDataElement("#@address2"),
                        bizNumber: GetDataElement("#@bizNumber"),
                        bizPhoneNumber: GetDataElement("#@bizPhoneNumber"),
                        openDate: ParsingDateyyyyMMdd($("#@openDate").dxDateBox('instance').option("value")),
                        memo: GetDataElement("#@memo"),
                        monitoringStartime: getDateTime("#@monitoringStartime"),
                        monitoringEndtime: getDateTime("#@monitoringEndtime"),
                    }

                    $.ajax({
                        url: url,
                        type: "POST",
                        data: obj,
                        dataType: 'json',
                        async: false,
                        success: function (result) {
                            debugger;
                            if (result.Success) {

                                DevExpress.ui.notify(
                                    {
                                        message: '@_loc.GetLocalizedString("Save store successfully! Sending information to syschonous on Kiosk Devices. Please wait a second")',
                                        position: {
                                            my: 'bottom right',
                                            at: 'bottom right'
                                        },
                                        width: '30%'
                                    },
                                    'info',
                                    5000
                                );

                                //RequestStoreMaster(obj, result.Data);

                            }
                            else {
                                DevExpress.ui.dialog.alert(result.Message, "Error");
                            }
                            LoadingPage(0);
                        },
                        error: function () {
                            LoadingPage(0);
                        }
                    });

                    //CRUDData(url, obj, METHOD.POST);

                    setTimeout(function () {
                        LoadStoreMaster(null, "#@gridParking");
                    }, 1000);


                }
            })
        }
    }

    // End Region: Create - Update - Delete

    // Region: Validation data
    function ValidationInputStoreMaster() {
        let storeName = GetDataElement("#@storeName");
        if (storeName == null || storeName == "" || typeof storeName === undefined) {
            DevExpress.ui.dialog.alert("@_loc.GetLocalizedString("Please Input StoreName")", "Error")
            ValidateElement("#@storeName")
            return false;
        }
        else {
            RemoveColorElement("#@storeName")
        }

        let location = GetDataElement("#@location");
        if (location == null || location == "" || typeof location === undefined) {
            DevExpress.ui.dialog.alert("@_loc.GetLocalizedString("Please Input Location")", "Error")
            ValidateElement("#@location")
            return false;
        }
        else {
            RemoveColorElement("#@location")
        }

        let openDate = GetDataElement("#@openDate");
        if (openDate == null || openDate == "" || typeof openDate === undefined) {
            DevExpress.ui.dialog.alert("@_loc.GetLocalizedString("Please Choose Open Date")", "Error")
            ValidateElement("#@openDate")
            return false;
        }
        else {
            RemoveColorElement("#@openDate")
        }


        let monitoringStartime = GetDataElement("#@monitoringStartime");
        if (monitoringStartime == null || monitoringStartime == "" || typeof monitoringStartime === undefined) {
            DevExpress.ui.dialog.alert("@_loc.GetLocalizedString("Please Choose Monitoring Startime")", "Error")
            ValidateElement("#@monitoringStartime")
            return false;
        }
        else {
            RemoveColorElement("#@monitoringStartime")
        }


        let monitoringEndtime = GetDataElement("#@monitoringEndtime");
        if (monitoringEndtime == null || monitoringEndtime == "" || typeof monitoringEndtime === undefined) {
            DevExpress.ui.dialog.alert("@_loc.GetLocalizedString("Please Choose Monitoring Endtime")", "Error")
            ValidateElement("#@monitoringEndtime")
            return false;
        }
        else {
            RemoveColorElement("#@monitoringEndtime")
        }
        return true;
    }
    // End Region
    function onItemGridToolbarPreparing(e) {
        var toolbarItems = e.toolbarOptions.items;
        toolbarItems.unshift(
            {
                visible: true,
                widget: "dxButton",
                options: {
                    text: "@_loc.GetLocalizedString("Add Vehicle")",
                    onClick: function () {
                        debugger;
                        @*var gridStore = GetGridStoreIntance();
                        if (gridStore.getSelectedRowsData().length < 1) {
                            DevExpress.ui.dialog.alert('@(_loc.GetLocalizedString(MessageCode.ME0001))', '@(_loc.GetLocalizedString("Message"))');
                            return;
                        }
                        var gridDevice = GetGridDeviceIntance().getSelectedRowsData();

                        if (gridDevice.length == 1) {
                            OpenCreateOrDetailDevice(gridDevice[0].storeDeviceNo);
                            return;
                        }
                        else if(gridDevice.length > 1) {
                            OpenCreateOrDetailDevice(gridDevice[gridDevice.length - 1].storeDeviceNo);
                            return;
                        }*@

                        OpenCreateOrDetailDevice(null);
                    },
                    icon: "fa fa-plus"
                },
                location: "after"
            }
        )
    }
</script>

<div id="menutoolbar_@(ViewBag.Thread)">
    @await Component.InvokeAsync("AccessToolbar", new { pageSetting = pageSetting, lstNewToolbar = lstNewToolbar, threadID = ViewBag.Thread })
</div>

<div class="row" id="divindex_@(ViewBag.Thread)">
    <div class="col-md-12" style="width:100%;height:100%;">
        <div class="card" style="height:100%;width:100%;">
            <div id="bodypage_@(ViewBag.Thread)" class="mr-2 ml-2" style="height:100%">
                <div class="row" style="height:100%">
                    <div class="col-md-12 mr-2">
                        <h5>
                            <strong>
                                @(_loc.GetLocalizedString("Profile Information"))
                            </strong>
                        </h5>
                        <div class="body-bottom-site">
                            <div class="row mt-1">
                                <div class="form-group col-md-6">
                                    <label>@(_loc.GetLocalizedString("Name"))</label>
                                    <div class="row mb-2">
                                        <div class="col-md-4">
                                            @(
                                            Html.DevExtreme().TextBox()
                                            .ID("231")
                                            .Placeholder("First Name")
                                            .MaxLength(100)
                                            )
                                        </div>
                                        <div class="col-md-8">
                                            @(
                                            Html.DevExtreme().TextBox()
                                            .ID("123")
                                            .Placeholder("Last Name")
                                            .MaxLength(100)
                                            )
                                        </div>
                                    </div>
                                    @(
                                    Html.DevExtreme().TextBox()
                                    .ID("641231")
                                    .ReadOnly(true)
                                    .MaxLength(100)
                                    )
                                </div>
                                <div class="form-group col-md-6">
                                    <label>@(_loc.GetLocalizedString("Contact"))</label>
                                    <div class="row mb-2">
                                        <div class="col-md-3">
                                            @(
                                                Html.DevExtreme().SelectBox()
                                                .ID(zipCode)
                                                .Placeholder(_loc.GetLocalizedString("Code"))
                                                .MaxLength(10)
                                                )
                                        </div>
                                        <div class="col-md-9">
                                            @(
                                                Html.DevExtreme().TextBox()
                                                .ID(address1)
                                                .Placeholder(_loc.GetLocalizedString("Phone Number"))
                                                .MaxLength(10)
                                                )
                                        </div>
                                    </div>
                                    @(
                                        Html.DevExtreme().TextBox()
                                        .ID(address2)
                                        .Placeholder(_loc.GetLocalizedString("Email"))
                                        .MaxLength(100)
                                     )
                                </div>
                            </div>
                            <div class="row mt-1">
                                <div class="form-group col-md-3">
                                    <label>@(_loc.GetLocalizedString("User Type"))</label>
                                    @(
                                    Html.DevExtreme().TextBox()
                                    .ID("12131223")
                                    .Placeholder("")
                                    .MaxLength(100)
                                    .ReadOnly(true)
                                    )
                                </div>
                                <div class="form-group col-md-3">
                                    <label>@(_loc.GetLocalizedString("Gender"))</label>
                                    @(
                                    Html.DevExtreme().SelectBox()
                                    .ID("121331223")
                                    .Placeholder("")
                                    .MaxLength(100)
                                    )
                                </div>
                                <div class="form-group col-md-3">
                                    <label>@(_loc.GetLocalizedString("Birthday"))</label>
                                    @(
                                    Html.DevExtreme().DateBox()
                                    .ID("121131223")
                                    .ShowClearButton(true)
                                    .DisplayFormat("MM-dd-yyyy")
                                    )
                                </div>
                                <div class="form-group col-md-3">
                                    <label>@(_loc.GetLocalizedString("Registered Date"))</label>
                                    @(
                                    Html.DevExtreme().DateBox()
                                    .ID("1213312231")
                                    .DisplayFormat("MM-dd-yyyy")
                                    .ReadOnly(true)
                                    )
                                </div>

                            </div>
                            <div class="row mt-1">
                                <div class="form-group col-md-6">
                                    <label>@(_loc.GetLocalizedString("Identification No"))</label>
                                    @(
                                    Html.DevExtreme().TextBox()
                                    .ReadOnly(true)
                                    .ID("564645")
                                    .Placeholder("")
                                    .MaxLength(100)
                                    )
                                </div>
                            </div>
                        </div>
                    </div>
                    <hr />
                    <div class="col-md-12 mr-2">
                        <h5>
                            <strong>
                                @(_loc.GetLocalizedString("Vehicle Information"))
                            </strong>
                        </h5>
                        <div class="body-bottom-site">
                            <div class="row mt-1">
                                @(
                                Html.DevExtreme().DataGrid<KIO_UserHistory>()
                                .ID("3123")
                                .Height("30vh")
                                .ShowBorders(true)
                                .ShowColumnLines(true)
                                .ShowRowLines(true)
                                .AllowColumnResizing(true)
                                .AllowColumnReordering(true)
                                .RemoteOperations(true)
                                .ColumnAutoWidth(true)
                                .ColumnFixing(c => c.Enabled(true))
                                .RepaintChangesOnly(true)
                                .Selection(s => s.Mode(SelectionMode.Single))
                                .Columns(c =>
                                {
                                    c.AddFor(x => x.no).Caption(_loc.GetLocalizedString("No"));
                                    c.AddFor(x => x.loginTime).Caption(_loc.GetLocalizedString("Login Time")).Format("yyyy-MM-dd HH:mm:ss").Alignment(0);
                                    c.AddFor(x => x.loginTime).Caption(_loc.GetLocalizedString("loginTime"));
                                    c.AddFor(x => x.approvalType).Caption(_loc.GetLocalizedString("approvalType"));
                                })

                                .Pager(pager =>
                                {
                                    pager.ShowInfo(true);
                                    pager.ShowNavigationButtons(true);
                                })
                                //.OnSelectionChanged("onItemGridSelectionChanged")
                                //.OnRowClick("ShowAudioFileDetail")
                                .OnToolbarPreparing("onItemGridToolbarPreparing")
                                .Paging(paging => paging.PageSize(100))
                                )
                            </div>
                        </div>
                    </div>
                    <hr />
                    <div class="col-md-12 mt-2 mr-2">
                        <h5>
                            <strong>
                                @(_loc.GetLocalizedString("Photo Information"))
                            </strong>
                        </h5>

                        <div class="body-bottom-site">
                            <div class="row mt-1">
                                <div class="col-md-3 form-group">
                                    <label>@(_loc.GetLocalizedString("Face"))</label>
                                    <div class="row border">
                                        <img id="photo-card-id" style="width: 100%; height: 400px; object-fit: cover" src="https://cdn.pixabay.com/photo/2021/06/11/12/26/woman-6328478_960_720.jpg" class="rounded float-end" alt="">
                                    </div>
                                    <div class="mr-2">
                                        @(Html.DevExtreme().FileUploader()
                                        .Name("imageFacePhoto")
                                        .Accept("*")
                                        .Multiple(false)
                                        .ID("FaceImage")
                                        .AllowedFileExtensions(new[] { ".jpg", ".jpeg", ".gif", ".png" })
                                        .UploadMode(FileUploadMode.Instantly)
                                        .UploadUrl(Url.Action("UploadImageCard", "MemberMgt") + "?userId=")
                                        .SelectButtonText("Upload")
                                        //.OnUploaded("LoadImageCardAfterUpload")
                                        )
                                    </div>
                                </div>
                                <div class="col-md-3 form-group">
                                    <label>@(_loc.GetLocalizedString("Vehicle"))</label>
                                    <div class="row border">
                                        <img id="photo-card-id" style="width: 100%; height: 400px; object-fit: cover" src="https://www.motorbiscuit.com/wp-content/uploads/2022/08/2023-dodge-durango-srt-hellcat-front-view.jpg" class="rounded float-end" alt="">
                                    </div>
                                    <div class="mr-2">
                                        @(Html.DevExtreme().FileUploader()
                                        .Name("imageVehiclePhoto")
                                        .Accept("*")
                                        .Multiple(false)
                                        .ID("VehiclePhoto")
                                        .AllowedFileExtensions(new[] { ".jpg", ".jpeg", ".gif", ".png" })
                                        .UploadMode(FileUploadMode.Instantly)
                                        .UploadUrl(Url.Action("UploadImageCard", "MemberMgt") + "?userId=")
                                        .SelectButtonText("Upload")
                                        //.OnUploaded("LoadImageCardAfterUpload")
                                        )
                                    </div>
                                </div>                             
                                <div class="col-md-3 form-group">
                                    <label>@(_loc.GetLocalizedString("Card Front"))</label>
                                    <div class="row border">
                                        <img id="photo-card-id" style="width: 100%; height: 400px; object-fit: cover" src="https://danviet.mediacdn.vn/296231569849192448/2021/6/15/mat-truoc-the-can-cuoc-cong-dan-gan-chip2303161656-1623717264852-16237172651942016881301.jpg" class="rounded float-end" alt="">
                                    </div>
                                    <div class="mr-2">
                                        @(Html.DevExtreme().FileUploader()
                                        .Name("imageVehiclePhoto")
                                        .Accept("*")
                                        .Multiple(false)
                                        .ID("FrontCardPhoto")
                                        .AllowedFileExtensions(new[] { ".jpg", ".jpeg", ".gif", ".png" })
                                        .UploadMode(FileUploadMode.Instantly)
                                        .UploadUrl(Url.Action("UploadImageCard", "MemberMgt") + "?userId=")
                                        .SelectButtonText("Upload")
                                        //.OnUploaded("LoadImageCardAfterUpload")
                                        )
                                    </div>
                                </div>
                                <div class="col-md-3 form-group">
                                    <label>@(_loc.GetLocalizedString("Card Back"))</label>
                                    <div class="row border">
                                        <img id="photo-card-id" style="width: 100%; height: 400px; object-fit: cover" src="https://media.vov.vn/sites/default/files/styles/large/public/2021-10/Can%20cuoc.jpg" class="rounded float-end" alt="">
                                    </div>
                                    <div class="mr-2">
                                        @(Html.DevExtreme().FileUploader()
                                        .Name("imageVehiclePhoto")
                                        .Accept("*")
                                        .Multiple(false)
                                        .ID("CardBackPhoto")
                                        .AllowedFileExtensions(new[] { ".jpg", ".jpeg", ".gif", ".png" })
                                        .UploadMode(FileUploadMode.Instantly)
                                        .UploadUrl(Url.Action("UploadImageCard", "MemberMgt") + "?userId=")
                                        .SelectButtonText("Upload")
                                        //.OnUploaded("LoadImageCardAfterUpload")
                                        )
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

