@using Modules.Pleiger.CommonModels;
@using InfrastructureCore.Models.Menu;
@using Modules.Admin.Models;
@using InfrastructureCore.Extensions;
@{
    Layout = null;
    SYMenuAccess pageSetting = new SYMenuAccess();
    pageSetting.SEARCH_YN = true;
    pageSetting.EXCEL_YN = true;

    List<ToolbarInfo> lstNewToolbar = new List<ToolbarInfo>();
    ToolbarInfo info = new ToolbarInfo();
    info.Name = "Reload";
    info.ID = "btnReload";
    info.Icon = "<i class='fas fa-sync'></i>";
    info.MenuID = ViewBag.MenuID;
    lstNewToolbar.Add(info);

    //ToolbarInfo upload = new ToolbarInfo();
    //upload.Name = "UploadFile";
    //upload.ID = "btnUploadFile";
    //upload.Icon = "<i class='fas fa-upload'></i>";
    //upload.MenuID = ViewBag.MenuID;
    //lstNewToolbar.Add(upload);
    // Quan close hiện tại không sử dụng

    var InitialCode = new[] { "All","Yes", "No" };

    string ProductReqItemCode = "ProductReqItemCode" + ViewBag.thread;
    string ProductReqItemName = "ProductReqItemName" + ViewBag.thread;
    string ProjectStatusPro = "ProjectStatusPro" + ViewBag.thread;
    string GridProductionRequest = "GridProductionRequest" + ViewBag.thread;
    string UserProjectCode = "UserProjectCode" + ViewBag.thread;
    string ProjectOrderType = "ProjectOrderType" + ViewBag.Thread;
    string ProjectName = "ProjectName" + ViewBag.Thread;
    string InitialCheck = "InitialCodeCheckBox" + ViewBag.Thread;
}

<script>
    var dataOnRow = "";

        $(document).ready(function () {
        LoadingPage(1);
        //function recalculate resize height
        ResizeProductionRequestChange();

        var projectStatus = MES_ComCodeDtls.filter(grCd => grCd.GROUP_CD == "PJST00");
        var ProjectOrderType = MES_ComCodeDtls.filter(grCd => grCd.GROUP_CD == "POT000");

        $("#@ProjectName").find(".dx-texteditor-input").prop("readonly", true)

        $("#ProjectOrderType@(ViewBag.Thread)").dxSelectBox({
            dataSource: ProjectOrderType,
            displayExpr: "BASE_NAME",
            valueExpr: "BASE_CODE"
        });

        $("#ProjectStatusPro@(ViewBag.thread)").dxSelectBox({
            dataSource: projectStatus,
            displayExpr: "BASE_NAME",
            valueExpr: "BASE_CODE"
        });

        // Set default search project status = PJST01
        $("#ProjectStatusPro@(ViewBag.thread)").dxSelectBox("instance").option("value", 'PJST01');
        LoadDataProductionReq();
        LoadingPage(0);
    })

        $(window).resize(function () {
            ResizeProductionRequestChange();
        });

        setInterval(function () {
            ResizeProductionRequestChange();
        }, 1500);

        function ResizeProductionRequestChange() {
            ReCalResize("divindex_@(ViewBag.Thread)", "ID", "tab-menu-content", "menutoolbar_@(ViewBag.Thread)", "height");
            if (CheckMobiNew()) {

            }
            else {
                if ($("#divindex_@(ViewBag.Thread)").is(':visible')){
                    ReCalResize("bodypage_@(ViewBag.Thread)", "ID", "divindex_@(ViewBag.Thread)", "headerpage_@(ViewBag.Thread)", "height");
                }
            }
        }

        // ShowProductionRequestDetail
        function ShowProductionRequestDetail(e) {
            //let data = e.data;
            let initialCode = $("#@InitialCheck").dxRadioGroup("instance").option("value");

            let projectCodeSelected = $(e).attr("data-Project-Code").trim();
            $.ajax({
                url: '@Url.Action("ShowDetailtemRequest", "MESProductionRequestChange")',
                type: "GET",
                data: {
                    projectCode: projectCodeSelected,
                    menuID: '@ViewBag.menuID',
                    vbParent: '@ViewBag.Thread',
                    InitialCode: initialCode

                },
                dataType: "html",
                success: function (result) {
                    $("#divDetailProductionRequestChange").html(null);
                    $("#divDetailProductionRequestChange").html(result);
                    $("#divMainProductionRequestChange").prop("hidden", true);
                    $("#divDetailProductionRequestChange").prop("hidden", false);
                }
            })

        }

        // Reaload tab
        $("#btnReload_@ViewBag.Thread").on("click", function () {
            LoadingPage(1);
            RefreshTab(this);
            LoadingPage(0);
        });

        // button Call function Search list PO Request
        $("#btnSearch_@ViewBag.Thread").on("click", function () {
            debugger;
            LoadingPage(1);
            LoadDataProductionReq();
            setTimeout(function () { LoadingPage(0); }, 1500);
        });

        // Search list PO Request
        function LoadDataProductionReq() {
        LoadingPage(1);
        CheckSession();

        var UserCode;
        if ('@ViewBag.SystemUserType' === 'G000C006' || '@ViewBag.SystemUserType' === 'G000C007' || '@ViewBag.SystemUserType' === 'G000C005') {
            UserCode = '@ViewBag.UserCode';
        }
        //let check = null;
        let initialCode = $("#@InitialCheck").dxRadioGroup("instance").option("value");
        var projectOrderType = $("#@ProjectOrderType").dxSelectBox('instance').option('value');
        //var projectCode = $("#ProductReq_ProjectCode@(ViewBag.thread)").dxTextBox("option", "value");
        var userProjectCode = $('#UserProjectCode@(ViewBag.Thread)').dxTextBox('instance').option('value');
        var itemCode = $("#ProductReqItemCode@(ViewBag.thread)").dxTextBox('instance').option('value');
        var itemName = $("#ProductReqItemName@(ViewBag.thread)").dxTextBox('instance').option('value');
        var projectStatus = $("#ProjectStatusPro@(ViewBag.thread)").dxSelectBox('instance').option('value');
        var projectName = $("#@ProjectName").dxTextBox('instance').option('value');

        if (projectStatus == "PJST02")
        {
            projectStatus = "PJST03";
        }
        $.ajax({
            url: '@Url.Action("SearchListProductionRequest", "MESProductionRequestChange")',
            type: 'GET',
            dataType: 'json',
            data: {
                ItemCode: itemCode,
                ItemName: itemName,
                UserProjectCode: userProjectCode, //Thien change search Name 2021-12-29
                ProjectStatus: projectStatus,
                UserCode: UserCode,
                checkCode: initialCode,
                ProjectOrderType: projectOrderType,
                ProjectName: projectName,
                StartDate: getParamsStartDate(),
                EndDate: getParamsEndDate()
            },
            success: function (result) {
                LoadingPage(0);
                $("#GridProductionRequestIndex").dxDataGrid("option", "dataSource", result);

            }
        });
        LoadingPage(0);
        }


        @*$("#btnUploadFile_@ViewBag.Thread").on("click", function () {
            LoadingPage(1);
            if (dataOnRow == null || dataOnRow == undefined || dataOnRow == "") {
                DevExpress.ui.dialog.alert('Please, Select one row on grid', 'Error');
            }
            else {
                $.ajax({
                url: '@Url.Action("StaskDrawingCreatePopup", "MESDrawing")',
                type: "GET",
                data: {
                    projectCode: dataOnRow.ProjectCode,
                    menuid: '@ViewBag.MenuID'
                },
                dataType: "html",
                success: function (result) {
                    $("#modalContent").html(result);
                    $("#modalContent").addClass("modal-xl");
                    $('#modalControl').modal('show');
                        LoadingPage(0);
                }, error: function (result) {
                    LoadingPage(0);
                    return;
                }
                });
            }
            LoadingPage(0);
        });*@

        function SelectionChangedProductionRequest@(ViewBag.Thread)(selectedItems) {
            dataOnRow = "";
            var item = selectedItems.data;
            dataOnRow = item;
        }

        function ShowPopupGetDataProjectName@(ViewBag.Thread)() {
        $.ajax({
            url: '@Url.Action("ShowProjectNamePopup", "MESProductionRequestChange")',
            type: "GET",
            data:
            {
                idParent: '@ViewBag.thread'
            },
            dataType: "html",
            success: function (result) {
                $("#modalContentChild").removeClass("modal-dialog");
                $("#modalContentChild").removeClass("modal-md");
                $("#modalContentChild").removeClass("modal-lg");
                $("#modalContentChild").removeClass("modal-xl");
                $("#modalContentChild").html(result);
                $("#modalContentChild").addClass("modal-dialog modal-lg");
                $('#modalControlChild').modal('show');
            }
        });
    }

        $('#btnExcel_@ViewBag.Thread').on("click", function () {
            LoadingPage(1);
            var dataGrid = $("#GridProductionRequestIndex");
            ExportExcelCommon(dataGrid, "ProductionRequest");
            LoadingPage(0);
        });

    function getParamsStartDate() {
        var value = $("#startDate@(ViewBag.Thread)").dxDateBox("instance").option("value");
        return ParsingDateyyyyMMdd(value);
    }

     function getParamsEndDate() {
        var value = $("#endDate@(ViewBag.Thread)").dxDateBox("instance").option("value");
        return ParsingDateyyyyMMdd(value);
    }
</script>


<div id="divMainProductionRequestChange" style="height:100%;width:100%;">
    <div id="menutoolbar_@(ViewBag.Thread)">
        @await Component.InvokeAsync("AccessToolbar", new { pageSetting = pageSetting, lstNewToolbar = lstNewToolbar, threadID = ViewBag.Thread })
    </div>
    <div class="row" id="divindex_@(ViewBag.Thread)">
        <div class="col-xs-12 col-md-12" style="height:100%;width:100%;">
            <div class="card" style="height:100%;width:100%">
                <div id="headerpage_@(ViewBag.Thread)" class="card-header">
                    <div class="row">
                        <div class="form-group col-xs-12 col-md-3">
                            <label>@(_loc.GetLocalizedString("Project Order Type"))</label>
                            @(Html.DevExtreme().SelectBox()
                                .ID(ProjectOrderType)
                                .ShowClearButton(true)
                                .SearchEnabled(true)
                                .DataSourceOptions(o => o.Paginate(true).PageSize(100))//async load more
                              )
                        </div>
                        <div class="form-group col-xs-12 col-md-3">
                            <label>@(_loc.GetLocalizedString("User Project Code"))</label>
                            @(Html.DevExtreme().TextBox()
                                    .ID(UserProjectCode)
                                    .Value("")
                            )
                        </div>
                        <div class="form-group col-xs-12 col-md-3">
                            <label>@(_loc.GetLocalizedString("Sales Order Project Name"))</label>
                            @(Html.DevExtreme().TextBox()
                                 .ID(ProjectName)
                                 .Value("")
                                 .Mode(TextBoxMode.Text)
                                 .ShowClearButton(true)
                                 .StylingMode(EditorStylingMode.Outlined)
                                 .Buttons(buttons =>
                                 {
                                    buttons.Add()
                                      .Name("ShowPopupGetDataCustomer")
                                      .Location(TextEditorButtonLocation.After)
                                      .Widget(w => w.Button()
                                        .ID("PopupGetCustomer"+ ViewBag.Thread)
                                        .Type(ButtonType.Default)
                                        .Icon("find")
                                        .OnClick("ShowPopupGetDataProjectName" + ViewBag.Thread));
                                })
                            )
                        </div>
                        <div class="form-group col-xs-12 col-md-3">
                            <label>@(_loc.GetLocalizedString("Initial Code"))</label>
                            @(Html.DevExtreme().RadioGroup()

                                .Items(InitialCode)
                                .Value("Yes")
                                .Layout(Orientation.Horizontal)
                                .ID(InitialCheck)

                            )
                        </div>
                    </div>


                    <div class="row">
                        <div class="form-group col-xs-12 col-md-3">
                            <label>@(_loc.GetLocalizedString("Project Status"))</label>
                            @(Html.DevExtreme().SelectBox()
                                .ID(ProjectStatusPro)
                                .ShowClearButton(true)
                                .SearchEnabled(true)
                                .DataSourceOptions(o => o.Paginate(true).PageSize(100))//async load more
                              )
                        </div>
                        <div class="form-group col-xs-12 col-md-3">
                            <label>@(_loc.GetLocalizedString("Item Code"))</label>
                            <div id="custom-templates"></div>
                            @(Html.DevExtreme().TextBox().ID(ProductReqItemCode).ShowClearButton(true))
                        </div>
                        <div class="form-group col-xs-12 col-md-3">
                            <label>@(_loc.GetLocalizedString("Item Name"))</label>
                            <div id="custom-templates"></div>
                            @(Html.DevExtreme().TextBox().ID(ProductReqItemName).ShowClearButton(true))
                        </div>
                        <div class="col-md-3 col-lg-3 col-xs-3 col-sm-3">
                            <div class="form-group">
                                <label>@(_loc.GetLocalizedString("PlanDeliveryDate"))</label>
                                <div class="form-group row">
                                    <div class="col-sm-5 col-xs-5">
                                        @(Html.DevExtreme().DateBox().ID("startDate"+ViewBag.Thread)
                                            .Type(DateBoxType.Date)
                                            .DisplayFormat("yyyy-MM-dd")
                                            .MaxLength(10)
                                             .Value(DateTime.Now.AddYears(-1).ToString("yyyy-MM-dd"))
                                        )
                                    </div>
                                    <div style="align-self: center;">~</div>
                                    <div class="col-sm-5 col-xs-5">
                                        @(Html.DevExtreme().DateBox().ID("endDate" + ViewBag.Thread)
                                            .Type(DateBoxType.Date)
                                            .DisplayFormat("yyyy-MM-dd")
                                            .MaxLength(10)
                                            .Value(DateTime.Now.ToString("yyyy-MM-dd"))
                                        )
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>


                </div>

                <div class="row" id="bodypage_@(ViewBag.Thread)">
                    <div class="col-xs-12 col-md-12" style="height:100%;width:100%">
                        <div class="card-body  p-0 pl-2 pr-2 pb-2" style="height:100%;width:100%">
                            @(Html.DevExtreme().DataGrid<MES_SaleProject>()
                                .ID("GridProductionRequestIndex")
                                .ShowBorders(true)
                                .ShowColumnLines(true)
                                .Selection(s => s.Mode(SelectionMode.Single))
                                .ShowRowLines(true)
                                .AllowColumnResizing(true)
                                .AllowColumnReordering(true)
                                .ColumnAutoWidth(true)
                                .Height("100%")
                                .FilterRow(filterRow => filterRow
                                .Visible(true)
                                .ApplyFilter(GridApplyFilterMode.Auto)
                                )
                                .RepaintChangesOnly(true)
                                .Selection(s => s.Mode(SelectionMode.Single)
                                .SelectAllMode(SelectAllMode.AllPages))
                                .Columns(c=> {

                                    c.AddFor(x => x.No).Caption("No");
                                    //c.AddFor(x => x.ProjectName).Caption(_loc.GetLocalizedString("Project Name"));
                                    c.AddFor(x => x.ProjectCode).Caption(_loc.GetLocalizedString("Project Code")).Visible(false);
                                    c.AddFor(x => x.InitialCode).Caption(_loc.GetLocalizedString("Initial Code")).DataType(GridColumnDataType.Boolean);
                                    c.AddFor(x => x.ProjectOrderType).Caption(_loc.GetLocalizedString("Project Order Type"));
                                    c.AddFor(x => x.SalesOrderProjectName).Caption(_loc.GetLocalizedString("Sales Order Project Name"));
                                    c.AddFor(x => x.ProjectName).Caption(_loc.GetLocalizedString("Production Project Name"));
                                    c.AddFor(x => x.UserProjectCode).Caption((_loc.GetLocalizedString("User Project"))).CellTemplate
                                    (
                                    @<text>
                                            <a href="#" onclick="ShowProductionRequestDetail(this)" data-Project-Code ="<%-data.ProjectCode%>">
                                                <%-data.UserProjectCode%>
                                            </a>
                                    </text>
                                );

                                    c.AddFor(x => x.ProjectStatusName).Caption((_loc.GetLocalizedString("Project Status"))).Alignment(HorizontalAlignment.Center);
                                    c.AddFor(x => x.SalesClassificationName).Caption((_loc.GetLocalizedString("Sales Classification")));
                                    c.AddFor(x => x.RequestTypeName).Caption((_loc.GetLocalizedString("Request Type"))).Alignment(HorizontalAlignment.Center);
                                    c.AddFor(x => x.RequestDate).Caption((_loc.GetLocalizedString("Request Date")))
                                                                .DataType(GridColumnDataType.Date).Format("yyyy-MM-dd")
                                                                .Alignment(HorizontalAlignment.Center);
                                    c.AddFor(x => x.UserNameRequest).Caption(_loc.GetLocalizedString("User Request"));
                                    c.AddFor(x => x.PartnerName).Caption(_loc.GetLocalizedString("Customer Name"));
                                    c.AddFor(x => x.ItemCode).Caption(_loc.GetLocalizedString("Item Code"));
                                    c.AddFor(x => x.ItemName).Caption(_loc.GetLocalizedString("Item Name"));
                                    c.AddFor(x => x.OrderQuantity).Caption(_loc.GetLocalizedString("Order Quantity")).Format("#,##0").Alignment(HorizontalAlignment.Right);
                                    c.AddFor(x => x.PlanDeliveryDate).Caption(_loc.GetLocalizedString("PlanDeliveryDate")).DataType(GridColumnDataType.Date).Format("yyyy-MM-dd")
                                                                .Alignment(HorizontalAlignment.Center);
                                })
                                .Scrolling(s => s.Mode(GridScrollingMode.Standard))
                                .HeaderFilter(f => f.Visible(true))
                                .Paging(paging => paging.PageSize(50))
                                .Pager(pager =>
                                {
                                    pager.ShowInfo(true);
                                    pager.ShowNavigationButtons(true);
                                })
                            .OnRowClick("SelectionChangedProductionRequest" + ViewBag.Thread)
                            )
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="divDetailProductionRequestChange" hidden>

</div>