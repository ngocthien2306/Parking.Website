@using InfrastructureCore.Models.Menu
@using Modules.Common.Models;
@using Modules.Admin.Models;
@{
    Layout = null;
    SYMenuAccess pageSetting = new SYMenuAccess();
    pageSetting.CREATE_YN = true;
    pageSetting.SEARCH_YN = true;
    pageSetting.SAVE_YN = true;
    pageSetting.DELETE_YN = true;

    List<ToolbarInfo> lstNewToolbar = new List<ToolbarInfo>();
    ToolbarInfo info = new ToolbarInfo();
    info.Name = "Reload";
    info.ID = "btnReload";
    info.Icon = "<i class='fas fa-sync'></i>";
    info.MenuID = ViewBag.MenuID;
    lstNewToolbar.Add(info);
}

<script>
    var SlipNumberSlt = null;
    var PONumberSlt = null;
    var poNumberSlt = null;
    var partnerCodeSlt = null;

    var flagCRUD = null;
    // Page start
    $(document).ready(function () {
        LoadingPage(1);
        ResizeGoodReturnPO();
        pageStart@(ViewBag.Thread)();
        LoadingPage(0);
    });

    function getParamsStartDateSearch() {
        var value = $("#startDate@(ViewBag.Thread)").dxDateBox("instance").option("value");
        if (value === null || value === "" || value === undefined) {
            return null;
        }
        return ParsingDateyyyyMMdd(value);
    }
    function getParamsEndDateSearch() {
        var value = $("#endDate@(ViewBag.Thread)").dxDateBox("instance").option("value");
        if (value === null || value === "" || value === undefined) {
            return null;
        }
        return ParsingDateyyyyMMdd(value);
    }

    function getParamsStatusSearch() {
        return null;
    }

    function getParamsPartnerCodeSearch() {
        return $("#ddlPartner@(ViewBag.Thread)").dxSelectBox("instance").option("value");
    }

    function getParamsSlipNumberSlt() {
        return SlipNumberSlt;
    }

    function getParamsPoNumberSlt() {
        return PONumberSlt;
    }

    function getParamsPartnerCodeSlt() {
        return partnerCodeSlt;
    }

    function ShowDataItemSlipDetail@(ViewBag.Thread)(e) {
            LoadingPage(1);
            CheckSession();
            debugger;
            var dataDelete = e.data;
            @*if (typeof dataDelete !== 'undefined') {
                $("#btnDelete_@ViewBag.Thread").attr("disabled", false);
            }
            else {
                $("#btnDelete_@ViewBag.Thread").attr("disabled", true);
            }*@

            let data = e.data;
            var slipNumberSelect = e.data.SlipNumber;
            SlipNumberSlt = slipNumberSelect;
            PONumberSlt = e.data.RelNumber;
            partnerCodeSlt = e.data.PartnerCode;

            $("#btnSave_@ViewBag.Thread").attr("disabled", false);
            flagCRUD = "Edit";
            //Show form detail
            SetDataFormDetail@(ViewBag.Thread)(data);

            $.ajax({
                url: '@Url.Action("GetListMESItemSlipDetailGoodsReturn", "MESItemSlip")',
                type: "GET",
                data: {
                    slipNumber: slipNumberSelect,
                    poNumber: PONumberSlt,
                },
                dataType: 'json',
                success: function (result) {
                    var grid = $("#gridItemSlipDtl@(ViewBag.Thread)").dxDataGrid("instance");
                    grid.option("dataSource", result.data);
                    grid.refresh();
                    LoadingPage(0);
                }, error: function (result) {
                    LoadingPage(0);
                    return;
                }
            });
        LoadingPage(0);
    }

    function SetDataFormDetail@(ViewBag.Thread)(data) {
        debugger;

        $("#WHPleigerCode@(ViewBag.Thread)").dxSelectBox("instance").option("value", data.WHFromCode);
        $("#WHPartnerCode@(ViewBag.Thread)").dxSelectBox("instance").option("value", data.WHToCode);
        $("#SlipNumber@(ViewBag.Thread)").val(data.SlipNumber);
        $("#PartnerCode@(ViewBag.Thread)").val(data.PartnerCode);
        $("#PartnerName@(ViewBag.Thread)").val(data.PartnerName);
        $("#Remark@(ViewBag.Thread)").val(data.Remark != null ? data.Remark : "");
        $("#SlipDate@(ViewBag.Thread)").dxDateBox("instance").option("value", ParsingDateyyyyMMdd(data.SlipYMD));

        //$("#PONumber@(ViewBag.Thread)").dxSelectBox("instance").option("value", data.RelNumber);
        $("#PONumberPopup@(ViewBag.Thread)").val(data.RelNumber);

        // set attribute readonly
        //$("#PONumber@(ViewBag.Thread)").dxSelectBox("instance").option("disabled", true);
        $("#WHPartnerCode@(ViewBag.Thread)").dxSelectBox("instance").option("disabled", true);
        $("#WHPleigerCode@(ViewBag.Thread)").dxSelectBox("instance").option("disabled", true);
        $("#PartnerCode@(ViewBag.Thread)").prop("disabled", true);
        $("#PartnerName@(ViewBag.Thread)").prop("disabled", true);
        $("#ProjectCode@(ViewBag.Thread)").prop("disabled", true);
        $("#Remark@(ViewBag.Thread)").prop("disabled", false);
        $("#SlipDate@(ViewBag.Thread)").dxDateBox("instance").option("disabled", true);
        $("#PONumberPopup@(ViewBag.Thread)").prop("disabled", true);
        $("#btnShowPopupSearchReturnPO@(ViewBag.Thread)").prop("disabled", true);

    }

    // Reload tab
        $("#btnReload_@ViewBag.Thread").on("click", function () {
            LoadingPage(1);
            CheckSession();
            RefreshTab(this);
            setTimeout(function () { LoadingPage(0); }, 1500);
        });

    // search
        $('#btnSearch_@ViewBag.Thread').on("click", function () {
            LoadingPage(1);
            CheckSession();
            pageStart@(ViewBag.Thread)();
            clearGridItemSlipDtl@(ViewBag.Thread)();
            if (ValidateRangeDate(getParamsStartDateSearch(), getParamsEndDateSearch())) {
                SearchAllData@(ViewBag.Thread)();
            }
            setTimeout(function () { LoadingPage(0); }, 1500);
        });

    // create
        $('#btnCreate_@ViewBag.Thread').on("click", function () {
            CheckSession();
            //set mask button
            $("#btnSave_@ViewBag.Thread").attr("disabled", false);
            clearInputForm@(ViewBag.Thread)();
            clearGridItemSlipDtl@(ViewBag.Thread)();
            GetItemSlipMasterKey@(ViewBag.Thread)();
            flagCRUD = "Insert";
        });

    // save
        $('#btnSave_@ViewBag.Thread').on("click", function () {
            LoadingPage(1);
            CheckSession();
            if (ValidateInputForm@(ViewBag.Thread)())
            {
                // Form Master
                let itemSlipMaster = {
                    SlipNumber: $("#SlipNumber@(ViewBag.Thread)").val(),
                    SlipYMD: $("#SlipDate@(ViewBag.Thread)").dxDateBox("instance").option("value"),
                    SlipType: '3',
                    PartnerCode: $("#PartnerCode@(ViewBag.Thread)").val(),
                    WHFromCode: $("#WHPleigerCode@(ViewBag.Thread)").dxSelectBox("instance").option("value"),
                    WHToCode: $("#WHPartnerCode@(ViewBag.Thread)").dxSelectBox("instance").option("value"),
                    TotalAmt: '',
                    TaxAmt: '',
                    Remark: $("#Remark@(ViewBag.Thread)").val(),
                    //RelNumber: $("#PONumber@(ViewBag.Thread)").dxSelectBox("instance").option("value"),
                    RelNumber: $("#PONumberPopup@(ViewBag.Thread)").val(),
                    // Quan add 2020/09/30
                    // Get SlipNumberGoodReciep when GoodReciep update  checkgoodsreturn
                    SlipNumberGoodReciep: $("#SlipNumberGoodReciep@(ViewBag.Thread)").val(),
                };
                debugger;
                var gridItemSlipDetailData = $('#gridItemSlipDtl@(ViewBag.Thread)').dxDataGrid('instance').getDataSource().items()

                var result = DevExpress.ui.dialog.confirm("<i>@MessageCode.MD0003</i>", "Confirm changes");
                result.done(function (dialogResult) {
                    if (dialogResult) {
                        $.blockUI();

                        $.ajax({
                            url: '@Url.Action("SaveDataGoodsReturn", "MESItemSlip")',
                            type: 'POST',
                            async: false,
                            data: {
                                flag: flagCRUD,
                                itemSlipMaster: JSON.stringify(itemSlipMaster),
                                itemSlipDetail: JSON.stringify(gridItemSlipDetailData)
                            },
                            dataType: 'json',
                            success: function (result) {
                                if (result.Success) {
                                    LoadingPage(0);
                                    DevExpress.ui.dialog.alert('@MessageCode.MD0004', "Success", function () {
                                        pageStart@(ViewBag.Thread)();
                                        clearGridItemSlipDtl@(ViewBag.Thread)();
                                        SearchAllData@(ViewBag.Thread)();
                                        $.unblockUI();
                                    });
                                }
                                else {
                                    $.unblockUI();
                                    LoadingPage(0);
                                    DevExpress.ui.dialog.alert(result.Message, "Error");
                                }
                            }, error: function (result) {
                                LoadingPage(0);
                                return;
                            }
                        });
                    } else {
                        LoadingPage(0);
                        return;
                    }
                });
                LoadingPage(0);
            }
            LoadingPage(0);
        });


    // delete
        $('#btnDelete_@ViewBag.Thread').on("click", function () {
            LoadingPage(1);
            CheckSession();
            debugger;
            var dataGridMst = $('#gridItemSlipMst@(ViewBag.Thread)').dxDataGrid('instance');
            var dataGridDtl = $('#gridItemSlipDtl@(ViewBag.Thread)').dxDataGrid('instance');
            var dataMst = dataGridMst.getSelectedRowsData();
            var dataDtl = dataGridDtl.getSelectedRowsData();
            if ((typeof dataMst !== 'undefined' && dataMst.length >= 0) || (typeof dataDtl !== 'undefined' && dataDtl.length >= 0)) {
                var result = DevExpress.ui.dialog.confirm("<i>@MessageCode.MD0003</i>", "Confirm changes");
                result.done(function (dialogResult) {
                    if (dialogResult) {
                        $.ajax({
                            url: '@Url.Action("DeleteDataGoodsReturn", "MESItemSlip")',
                            type: "POST",
                            data: { dataMst: dataMst, dataDtl: dataDtl },
                            dataType: "json",
                            success: function (rs) {
                                if (rs.Success == true) {
                                    LoadingPage(0);
                                    DevExpress.ui.dialog.alert('@MessageCode.MD0004', "Success", function () {
                                        debugger;
                                        pageStart@(ViewBag.Thread)();
                                        clearGridItemSlipDtl@(ViewBag.Thread)();
                                        SearchAllData@(ViewBag.Thread)();
                                        $.unblockUI();
                                    });
                                }
                                else {
                                    $.unblockUI();
                                    LoadingPage(0);
                                    DevExpress.ui.dialog.alert(result.Message, "Error");
                                }
                            }, error: function (result) {
                                LoadingPage(0);
                                return;
                            }
                        });
                    } else {
                        LoadingPage(0);
                        return;
                    }
                });
            } else {
                LoadingPage(0);
                DevExpress.ui.dialog.alert("Please make sure data are changed.", "Warning");
            }
            LoadingPage(0);
        });

    function GridItemSlipMstSelectionChanged@(ViewBag.Thread)(selectedItems) {
        debugger;
        var data = selectedItems.selectedRowsData;
        if (typeof data !== 'undefined' && data.length > 0) {
            $("#btnDelete_@ViewBag.Thread").attr("disabled", false);
        }
        else {
            $("#btnDelete_@ViewBag.Thread").attr("disabled", true);
        }
    }

    function GridItemSlipDtlSelectionChanged@(ViewBag.Thread)(selectedItems) {
        debugger;
        var data = selectedItems.selectedRowsData;
        if (typeof data !== 'undefined' && data.length > 0) {
            $("#btnDelete_@ViewBag.Thread").attr("disabled", false);
        }
        else {
            $("#btnDelete_@ViewBag.Thread").attr("disabled", true);
        }
    }

    function ValidateInputForm@(ViewBag.Thread)() {
            var checkSave = true;

        // PO number
        // let PONumber = $("#PONumber@(ViewBag.Thread)").dxSelectBox("instance").option("value");
        let PONumber = $("#PONumberPopup@(ViewBag.Thread)").val();
        if (PONumber == null || PONumber == undefined || PONumber == "") {
            DevExpress.ui.dialog.alert("Please select PO Number!", "Error");
            checkSave = false;
            return checkSave;
        }
        // WHPleigerCode
        let WHPartnerCode = $("#WHPartnerCode@(ViewBag.Thread)").dxSelectBox("instance").option("value");
        if (WHPartnerCode == null || WHPartnerCode == undefined || WHPartnerCode == "") {
            DevExpress.ui.dialog.alert("Please select Warehouse Pleiger!", "Error");
            checkSave = false;
            return checkSave;
        }

        // WHPartnerCode
        let WHPleigerCode = $("#WHPleigerCode@(ViewBag.Thread)").dxSelectBox("instance").option("value");
        if (WHPleigerCode == null || WHPleigerCode == undefined || WHPleigerCode == "") {
            DevExpress.ui.dialog.alert("Please select Warehouse Partner!", "Error");
            checkSave = false;
            return checkSave;
        }

        // check Qty can not higher than DeliveryQty
        var gridDtl = $("#gridItemSlipDtl@(ViewBag.Thread)").dxDataGrid("instance").getDataSource().items();
        var sumQty = 0, sumDeliverQty = 0;
        $.each(gridDtl, function (index, item) {
            sumQty += item.Qty;
            sumDeliverQty += item.DeliverQty;
        });

        if (sumQty <= 0 || sumQty > sumDeliverQty) {
            DevExpress.ui.dialog.alert("Please make sure the correct Return Qty!", "Error");
            checkSave = false;
            return checkSave;
        }
             var gridItemSlipDetailData = $('#gridItemSlipDtl@(ViewBag.Thread)').dxDataGrid('instance').getDataSource().items()
        if (gridItemSlipDetailData != null) {
            $.each(gridItemSlipDetailData, function (index, item) {
                debugger;
                if (gridItemSlipDetailData[index].Qty > gridItemSlipDetailData[index].DeliverQty) {
                    DevExpress.ui.dialog.alert("Qty cannot higher than POQty.", "Error");
                    checkSave = false;
                    return checkSave;
                    //return false;
                }
                if (gridItemSlipDetailData[index].Qty <= 0) {
                    DevExpress.ui.dialog.alert("Please input positive number or different zero.", "Error");
                    checkSave = false;
                    return checkSave;
                }
            });
        }
        return true;
    }

    function clearInputForm@(ViewBag.Thread)() {
        //$("#PONumber@(ViewBag.Thread)").dxSelectBox("instance").option("disabled", false);
        $("#PONumberPopup@(ViewBag.Thread)").prop("disabled", false);


        $("#WHPartnerCode@(ViewBag.Thread)").dxSelectBox("instance").option("disabled", false);
        $("#WHPleigerCode@(ViewBag.Thread)").dxSelectBox("instance").option("disabled", false);
        $("#PartnerCode@(ViewBag.Thread)").prop("disabled", true);
        $("#PartnerName@(ViewBag.Thread)").prop("disabled", true);
        $("#ProjectCode@(ViewBag.Thread)").prop("disabled", true);
        $("#Remark@(ViewBag.Thread)").prop("disabled", false);
        $("#SlipDate@(ViewBag.Thread)").dxDateBox("instance").option("disabled", true);
        $("#btnShowPopupSearchReturnPO@(ViewBag.Thread)").prop("disabled", false);

        $("#PartnerCode@(ViewBag.Thread)").val(null);
        $("#PartnerName@(ViewBag.Thread)").val(null);
        $("#ProjectCode@(ViewBag.Thread)").val(null);
        $("#SlipNumber@(ViewBag.Thread)").val(null);
        $("#Remark@(ViewBag.Thread)").val(null);
        $("#SlipDate@(ViewBag.Thread)").dxDateBox("instance").option("value", new Date());
        //$("#PONumber@(ViewBag.Thread)").dxSelectBox("instance").option("value", null);
        $("#WHPartnerCode@(ViewBag.Thread)").dxSelectBox("instance").option("value", null);
        $("#WHPleigerCode@(ViewBag.Thread)").dxSelectBox("instance").option("value", null);
        $("#PONumberPopup@(ViewBag.Thread)").val(null);

    }

    function pageStart@(ViewBag.Thread)() {
        debugger;
        //$("#PONumber@(ViewBag.Thread)").dxSelectBox("instance").option("disabled", true);
        $("#PONumberPopup@(ViewBag.Thread)").prop("disabled", true);
        $("#WHPartnerCode@(ViewBag.Thread)").dxSelectBox("instance").option("disabled", true);
        $("#WHPleigerCode@(ViewBag.Thread)").dxSelectBox("instance").option("disabled", true);
        $("#PartnerCode@(ViewBag.Thread)").prop("disabled", true);
        $("#PartnerName@(ViewBag.Thread)").prop("disabled", true);
        $("#ProjectCode@(ViewBag.Thread)").prop("disabled", true);
        $("#Remark@(ViewBag.Thread)").prop("disabled", true);
        $("#SlipDate@(ViewBag.Thread)").dxDateBox("instance").option("disabled", true);
        $("#btnShowPopupSearchReturnPO@(ViewBag.Thread)").prop("disabled", true);

        $("#PartnerCode@(ViewBag.Thread)").val(null);
        $("#PartnerName@(ViewBag.Thread)").val(null);
        $("#ProjectCode@(ViewBag.Thread)").val(null);
        $("#Remark@(ViewBag.Thread)").val(null);
        $("#SlipNumber@(ViewBag.Thread)").val(null);
        $("#SlipDate@(ViewBag.Thread)").dxDateBox("instance").option("value", '');
        //$("#PONumber@(ViewBag.Thread)").dxSelectBox("instance").option("value", null);
        $("#WHPartnerCode@(ViewBag.Thread)").dxSelectBox("instance").option("value", '');
        $("#WHPleigerCode@(ViewBag.Thread)").dxSelectBox("instance").option("value", '');
        $("#PONumberPopup@(ViewBag.Thread)").val(null);

        //set mask button
        $("#btnSave_@ViewBag.Thread").attr("disabled", true);
        $("#btnDelete_@ViewBag.Thread").attr("disabled", true);

    }

    function clearGridItemSlipDtl@(ViewBag.Thread)() {
        var grid = $("#gridItemSlipDtl@(ViewBag.Thread)").dxDataGrid("instance");
        grid.option("dataSource", null);
        grid.refresh();
    }

    function createGridItemSlipDtlByPONumber@(ViewBag.Thread)() {
        $.ajax({
            url: '@Url.Action("CreateGridItemSlipDtlByPONumberInGoodsReturn", "MESItemSlip")',
            type: "GET",
            data: {
                poNumber: poNumberSlt
            },
            dataType: 'json',
            success: function (result) {
                var grid = $("#gridItemSlipDtl@(ViewBag.Thread)").dxDataGrid("instance");
                grid.option("dataSource", result.data);
                grid.refresh();
            }
        });
    }

    function isNotEmpty(value) {
        return value !== undefined && value !== null && value !== "";
    }

        function SearchAllData@(ViewBag.Thread)() {
            CheckSession();
            $.ajax({
                url: '@Url.Action("GetItemSlipMasterGoodsReturnPO", "MESItemSlip")',
                type: "GET",
                data: {
                    startDate: getParamsStartDateSearch(),
                    endDate: getParamsEndDateSearch(),
                    status: getParamsStatusSearch(),
                    partnerCode: getParamsPartnerCodeSearch()
                },
                dataType: 'json',
                success: function (result) {
                    var grid = $("#gridItemSlipMst@(ViewBag.Thread)").dxDataGrid("instance");
                    grid.option("dataSource", result.data);
                    grid.refresh();
                }
            });
        }
        function GetItemSlipMasterKey@(ViewBag.Thread)() {
            CheckSession();
            $.ajax({
                url: '@Url.Action("GetItemSlipMasterKey", "MESItemSlip")',
                type: "GET",
                data: {},
                dataType: 'json',
                success: function (result) {
                    $("#SlipNumber@(ViewBag.Thread)").val(result);
                }
            });
        }
        function PONumberValueChanged@(ViewBag.Thread)(data) {
            CheckSession();
            debugger;
            let dataSelected = data.value;
            poNumberSlt = dataSelected;
            //get data refer
            $.ajax({
                url: '@Url.Action("GetDataReferByPONumberForRelease", "MESItemSlip")',
                type: "GET",
                data: { PONumber: dataSelected },
                dataType: 'json',
                success: function (result) {
                    debugger;
                    SetDataFormDetailByPONumberValueChanged@(ViewBag.Thread)(result.data);
                }
            });
            // get Item detail by POnumber
            createGridItemSlipDtlByPONumber@(ViewBag.Thread)();

        }

    function SetDataFormDetailByPONumberValueChanged@(ViewBag.Thread)(data) {
        debugger;
        // set attribute readonly
        $("#PartnerCode@(ViewBag.Thread)").prop("disabled", true);
        $("#PartnerName@(ViewBag.Thread)").prop("disabled", true);
        $("#ProjectCode@(ViewBag.Thread)").prop("disabled", true);
        $("#PONumberPopup@(ViewBag.Thread)").prop("disabled", true);
        $("#btnShowPopupSearchReturnPO@(ViewBag.Thread)").prop("disabled", true);

        // set value
        $("#PartnerCode@(ViewBag.Thread)").val(data != null ? data.PartnerCode : "");
        $("#PartnerName@(ViewBag.Thread)").val(data != null ? data.PartnerName : "");
        $("#ProjectCode@(ViewBag.Thread)").val(data != null ? data.ProjectCode : "");

        let remark = "";
        if (data != null) {
             if (data.ProjectCode != "") {
                remark += "Based on Sale Orders " + data.ProjectCode + ".\n";
             }
            remark += "Based on Purchase Orders " + data.PONumber + ".\n";
            remark += "Based on Goods Receipt PO " + data.PONumber + ".\n";
            $("#Remark@(ViewBag.Thread)").val(remark);
        }

        partnerCodeSlt = data != null ? data.PartnerCode : "";

        // reset value
        var WHPartnerCodeValue = $("#WHPartnerCode@(ViewBag.Thread)").dxSelectBox("instance").option("value");
        var WHPleigerCode = $("#WHPleigerCode@(ViewBag.Thread)").dxSelectBox("instance").option("value");

        if (WHPartnerCodeValue == null || WHPartnerCodeValue == undefined || WHPartnerCodeValue == "") {
            $("#WHPartnerCode@(ViewBag.Thread)").dxSelectBox("instance").option("value", '');
        }
        if (WHPleigerCode == null || WHPleigerCode == undefined || WHPleigerCode == "") {
            $("#WHPleigerCode@(ViewBag.Thread)").dxSelectBox("instance").option("value", '');
        }

    }

    function gridItemSlipDtlOnCellPrepared@(ViewBag.Thread)(e) {
        if (e.rowType == 'data' && e.column.dataField == 'DeliverQty') {
            e.cellElement.css("color", "red");
            e.cellElement.css('backgroundColor', "yellow");
        }
    }

    function gridItemSlipDtlOnRowRemoved@(ViewBag.Thread)(e) {
        debugger;
        flagCRUD = "Delete";
        var listDel = [];
        listDel.push(e.data);

        console.log(listDel);
    }

    function validateQtyInputNumber@(ViewBag.Thread)(e) {
        debugger;
        if (e.data.Qty > e.data.DeliverQty) {
            e.rule.message = "Return Qty cannot higher than DeliverQty.";
            return false;
        }
        if (e.data.Qty <= 0) {
            e.rule.message = "Please input positive number or different zero.";
            return false;
        }
        return true;
    }

        function onchangePONumber(e) {
            CheckSession();
            debugger;
            var PONumberChange = $("#PONumberPopup@(ViewBag.Thread)").val();
            var PartnerCodeChange = $("#PONumberPopup@(ViewBag.Thread)").val();
            // get data refer
            $.ajax({
                url: '@Url.Action("GetDataReferByPONumberForRelease", "MESItemSlip")',
                type: "GET",
                data: { PONumber: PONumberChange},
                dataType: 'json',
                success: function (result) {
                 debugger;

                // reset value
                $("#WHPartnerCode@(ViewBag.Thread)").dxSelectBox("instance").option("value", '');
                $("#WHPleigerCode@(ViewBag.Thread)").dxSelectBox("instance").option("value", '');
                    $("#PartnerCode@(ViewBag.Thread)").val(null);
                    $("#PartnerName@(ViewBag.Thread)").val(null);
                $("#ProjectCode@(ViewBag.Thread)").val(null);
                    $("#SlipNumber@(ViewBag.Thread)").val(null);
                var grid = $("#gridItemSlipDtl@(ViewBag.Thread)").dxDataGrid("instance");
                grid.option("dataSource", result.data);
                grid.refresh();
                }
            });
        }
      // Quan add 2020/09/23
        $("#btnShowPopupSearchReturnPO@(ViewBag.Thread)").on("click", function () {
            CheckSession();
            debugger;
            $.ajax({
                url: '@Url.Action("PopupSearchReturnPO", "MESItemSlip")',
                type: "GET",
                data:
                {
                    Index: "@(ViewBag.Thread)"
                },
                dataType: "html",
                success: function (result) {
                    // parent popup
                    $("#modalContent").html(result);
                    $("#modalContent").addClass("modal-xl");
                    $('#modalControl').modal('show');
                }
            });
        });

        function SetCellValueQtyReTurn(rowdata, value) {
            rowdata.Qty = value;
        }
    $(window).resize(function () {
        ResizeGoodReturnPO();
    });

    var setintervalGoodReturnPO = setInterval(IntervalGoodReturnPO, 25);
    var demmGoodReturnPO = 0;
    function IntervalGoodReturnPO() {
        ++demmGoodReturnPO;
        //console.log(demmGoodReturnPO);



        if (demmGoodReturnPO == 100) {
            clearInterval(setintervalGoodReturnPO);
        }
        else {
            ResizeGoodReturnPO();
        }
    }

    //setInterval(function () {
    //    //console.log("setInterval production request change");
    //    ResizeGoodReturnPO();
    //}, 25);
    function ResizeGoodReturnPO() {
        ReCalResize("divindex_@(ViewBag.Thread)", "ID", "tab-menu-content", "menutoolbar_@(ViewBag.Thread)", "height");
        if (CheckMobiNew()) {

        }
        else {
            if ($("#divindex_@(ViewBag.Thread)").is(':visible')){
                ReCalResize("bodypage_@(ViewBag.Thread)", "ID", "divindex_@(ViewBag.Thread)", "headerpage_@(ViewBag.Thread)", "height");
                ReCalResize("bdpage_@(ViewBag.Thread)", "ID", "rowright_@(ViewBag.Thread)", "hdpage_@(ViewBag.Thread)", "height");
            }
        }
    }
</script>

@{
    string idParnerDDL = "ddlPartner" + ViewBag.Thread;
    string gridItemSlipMst = "gridItemSlipMst" + ViewBag.Thread;
    string gridItemSlipDtl = "gridItemSlipDtl" + ViewBag.Thread;
    string PONumberDDL = "PONumber" + ViewBag.Thread;
    string WHPartnerCodeDDL = "WHPartnerCode" + ViewBag.Thread;
    string WHPleigerCodeDDL = "WHPleigerCode" + ViewBag.Thread;
}

<div>
    @*@await Component.InvokeAsync("AccessToolbar", new { pageSetting = pageSetting, lstNewToolbar = lstNewToolbar })*@
    <div id="menutoolbar_@(ViewBag.Thread)">
        @await Component.InvokeAsync("AccessToolbar", new { pageSetting = pageSetting, lstNewToolbar = lstNewToolbar, threadID = ViewBag.Thread })
    </div>
    

    <div class="row" id="divindex_@(ViewBag.Thread)">
        <div class="col-md-6" style="height:100%">
            <div class="card" id="headerpage_@(ViewBag.Thread)">
               
                <div class="card-body p-2">
                    <div class="row">
                        <div class="col-md-5">
                            <label>@(_loc.GetLocalizedString("Slip Date"))</label>
                            <div class="form-group row">
                                <div class="col-sm-5 col-xs-5">
                                    @(Html.DevExtreme().DateBox().ID("startDate" + ViewBag.Thread)
                                        .Type(DateBoxType.Date)
                                        //.Value(new DateTime(DateTime.Now.Year, DateTime.Now.Month, 1))
                                        .Value("")
                                        .DisplayFormat("yyyy-MM-dd")
                                        .MaxLength(10)
                                    )
                                </div>
                                <div style="align-self: center;">~</div>
                                <div class="col-sm-5 col-xs-5">
                                    @(Html.DevExtreme().DateBox().ID("endDate" + ViewBag.Thread)
                                        .Type(DateBoxType.Date)
                                        //.Value(DateTime.Now)
                                        .Value("")
                                        .DisplayFormat("yyyy-MM-dd")
                                        .MaxLength(10)
                                    )
                                </div>
                            </div>
                        </div>

                        @*<div class="col-md-2">
                                <div class="form-group">
                                    <label>@(_loc.GetLocalizedString("Status"))</label>
                                    @(Html.DevExtreme().SelectBox()
                                        .ID(idStatusDDL)
                                        //.DataSource(d=>d.Mvc().Controller("MESProductionRequest").LoadAction("GetListCommonCode").LoadParams(new { groupCode="RQTP00"}))
                                        .DisplayExpr("BASE_NAME1")
                                        .ValueExpr("BASE_CODE")
                                    )
                                </div>
                            </div>*@
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="PartnerCodeSearch">@(_loc.GetLocalizedString("Supplier Name"))</label>
                                @(Html.DevExtreme().SelectBox()
                            .ID(idParnerDDL)
                            .DataSource(d => d.Mvc().Controller("MESPartner")
                            .LoadAction("GetAllPartner"))
                            .DisplayExpr("PartnerName")
                            .ValueExpr("PartnerCode")
                            .SearchEnabled(true).ShowClearButton(true)
                            .DataSourceOptions(o => o.Paginate(true).PageSize(100))
                                                    )
                            </div>
                        </div>
                        @*<div class="col-md-3">
                                <div class="form-group">
                                    <label for="UserProjectCodeSearch">@(_loc.GetLocalizedString("UserProjectCode"))</label>
                                    <input type="text" class="form-control" id="UserProjectCodeSearch@(ViewBag.Thread)">
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label for="UserPONumberSearch">@(_loc.GetLocalizedString("UserPONumber"))</label>
                                    <input type="text" class="form-control" id="UserPONumberSearch@(ViewBag.Thread)">
                                </div>
                            </div>*@
                    </div>
                </div>
            </div>
            <div class="card card-solid"  id="bodypage_@(ViewBag.Thread)">

                <div class="card-body p-2" style="height:100%">
                    <div class="row"  style="height:100%">
                        <div class="col-sm-12 col-xs-12"  style="height:100%">
                            <fieldset class="customFieldset"  style="height:100%">
                                <legend class="customLegend">@_loc.GetLocalizedString("ItemSlipMaster")</legend>
                                @(Html.DevExtreme().DataGrid<Modules.Pleiger.Models.MES_ItemSlipMaster>()
                                .ID(gridItemSlipMst)
                                .DataSource(
                                    x => x.Mvc().Controller("MESItemSlip")
                                    .LoadAction("GetItemSlipMasterGoodsReturnPO").LoadParams(new { startDate = new JS("getParamsStartDateSearch"),
                                        endDate = new JS("getParamsEndDateSearch"), status = new JS("getParamsStatusSearch"),
                                        partnerCode = new JS("getParamsPartnerCodeSearch")
                                    })
                                    .Key("SlipNumber")
                                )
                                .ShowBorders(true)
                                .ShowColumnLines(true)
                                .ShowRowLines(true)
                                .AllowColumnResizing(true)
                                .AllowColumnReordering(true)
                                .ColumnAutoWidth(true).Height("100%")
                                //.FilterRow(filterRow => filterRow
                                //    .Visible(true)
                                //    .ApplyFilter(GridApplyFilterMode.Auto)
                                //)
                                //.HeaderFilter(f => f.Visible(true))
                                .Selection(s => s.Mode(SelectionMode.Multiple)
                                        .ShowCheckBoxesMode(GridSelectionShowCheckBoxesMode.Always)
                                        .SelectAllMode(SelectAllMode.AllPages))
                                .Columns(c => {
                                    c.AddFor(x => x.No).Caption(_loc.GetLocalizedString("No"));
                                    c.AddFor(x => x.SlipNumber).Caption(_loc.GetLocalizedString("SlipNumber"));
                                    c.AddFor(x => x.SlipYMD).Caption(_loc.GetLocalizedString("Slip Date")).DataType(GridColumnDataType.Date).Format("yyyy-MM-dd");
                                    c.AddFor(x => x.RelNumber).Caption(_loc.GetLocalizedString("PO Number")).Visible(false);
                                    //c.AddFor(x => x.PartnerCode).Caption(_loc.GetLocalizedString("Partner Code"));
                                    c.AddFor(x => x.PartnerName).Caption(_loc.GetLocalizedString("Supplier Name"));
                                    //c.AddFor(x => x.WHToCode).Caption(_loc.GetLocalizedString("WHPleigerName")).Visible(true);// Pleiger
                                    //c.AddFor(x => x.WHToName).Caption(_loc.GetLocalizedString("WHPleigerName")).Visible(true);// Pleiger
                                    c.AddFor(x => x.WHFromName).Caption(_loc.GetLocalizedString("Warehouse Name")).Visible(true);// Pleiger
                                    c.AddFor(x => x.TotalTaxAmt).Caption(_loc.GetLocalizedString("Total Tax Amt")).Format("#,##0.#0");
                                    c.AddFor(x => x.WHFromCode).Caption(_loc.GetLocalizedString("Warehouse Partner")).Visible(false);
                                    c.AddFor(x => x.UserCreated).Caption(_loc.GetLocalizedString("UserCreated")).Visible(false);
                                    c.AddFor(x => x.CheckedGoodsReturn).Caption(_loc.GetLocalizedString("CheckedGoodsReturn")).Visible(false);
                                    c.AddFor(x => x.SlipNumberGoodReciep).Caption(_loc.GetLocalizedString("SlipNumberGoodReciep")).Visible(false);
                                })
                                .RemoteOperations(true)
                                .Scrolling(s => s
                                    .Mode(GridScrollingMode.Standard)
                                )
                                .Paging(p => p.PageSize(100))
                                .Pager(pager =>
                                {
                                    pager.ShowInfo(true);
                                    pager.ShowNavigationButtons(true);
                                })
                                .OnRowClick("ShowDataItemSlipDetail" + ViewBag.Thread)
                                .OnSelectionChanged("GridItemSlipMstSelectionChanged" + ViewBag.Thread)
                                )
                            </fieldset>
                        </div>

                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-6 pl-0" style="height:100%;">
            <div class="card card-solid" style="height:100%;">
                <div class="card-body p-2" style="height:100%;">
                    <div class="row" style="height:100%;">
                        <div class="col-sm-12 col-xs-12" style="height:100%;">
                            <div class="row" id="rowright_@(ViewBag.Thread)" style="height:100%;">
                                <div class="col-12" id="hdpage_@(ViewBag.Thread)">
                                    <fieldset class="customFieldset">
                                        <legend class="customLegend">@_loc.GetLocalizedString("ItemSlipMaster")</legend>
                                        <div class="form-group row">
                                            <div class="form-group col-md-3">
                                                <label for="PONumber">@(_loc.GetLocalizedString("PO Number"))</label>
                                              
                                                <div class="input-group mb-3">
                                                    @*<input type="text" id="PONumberPopup@(ViewBag.Thread)" onchange="onchangePONumber()" class="form-control">*@
                                                    <input type="text" id="PONumberPopup@(ViewBag.Thread)" class="form-control">
                                                    <div class="input-group-append">
                                                        <button class="btn btn-outline-secondary" id="btnShowPopupSearchReturnPO@(ViewBag.Thread)" type="button">
                                                            <i class="fa fa-search"></i>
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="form-group col-md-3">
                                                <label for="PartnerCode">@(_loc.GetLocalizedString("Supplier Code"))</label>
                                                <input type="text" class="form-control" id="PartnerCode@(ViewBag.Thread)">
                                            </div>
                                            <div class="form-group col-md-3">
                                                <label for="PartnerName">@(_loc.GetLocalizedString("Supplier Name"))</label>
                                                <input type="text" class="form-control" id="PartnerName@(ViewBag.Thread)">
                                            </div>
                                            <div class="form-group col-md-3">
                                                <label for="ProjectCode">@(_loc.GetLocalizedString("Project Code"))</label>
                                                <input type="text" class="form-control" id="ProjectCode@(ViewBag.Thread)">
                                            </div>
                                            <div class="form-group col-md-3">
                                                <label for="WHPleigerName">@(_loc.GetLocalizedString("Warehouse From"))</label>
                                                @(Html.DevExtreme().SelectBox()
                                                            .ID(WHPleigerCodeDDL)
                                                            .DisplayExpr("Name")
                                                            .ValueExpr("ID")
                                                            .DataSource(d => d.Mvc().Controller("MESWarehouse")
                                                                .LoadAction("GetAllPleigerMaterialWarehouse")
                                                                .Key("ID")
                                                            )
                                                            //.OnValueChanged("PONumberValueChanged")
                                                            .SearchEnabled(true)
                                                            .DataSourceOptions(o => o.Paginate(true).PageSize(100))//async load more
                                                )
                                            </div>
                                            <div class="form-group col-md-3">
                                                <label for="WHPartnerName">@(_loc.GetLocalizedString("Warehouse To"))</label>
                                                @(Html.DevExtreme().SelectBox()
                                                            .ID(WHPartnerCodeDDL)
                                                            .DisplayExpr("Name")
                                                            .ValueExpr("ID")
                                                            .DataSource(d => d.Mvc().Controller("MESWarehouse")
                                                                .LoadAction("GetAllPartnerWarehouse").LoadParams(new { PartnerCode = new JS("getParamsPartnerCodeSlt") })
                                                                .Key("ID")
                                                            )
                                                            //.OnValueChanged("PONumberValueChanged")
                                                            .SearchEnabled(true)
                                                            .DataSourceOptions(o => o.Paginate(true).PageSize(100))//async load more
                                                )
                                            </div>
                                            <div class="form-group col-md-3">
                                                <label for="SlipNumber">@(_loc.GetLocalizedString("SlipNumber"))</label>
                                                <input type="text" class="form-control" readonly id="SlipNumber@(ViewBag.Thread)">
                                            </div>

                                            <div class="form-group col-md-3">
                                                <label for="SlipDate">@(_loc.GetLocalizedString("Slip Date"))</label>
                                                @(Html.DevExtreme().DateBox().ID("SlipDate" + ViewBag.Thread)
                                                    .Type(DateBoxType.Date).DisplayFormat("yyyy-MM-dd")
                                                    .MaxLength(10)
                                                )
                                            </div>
                                            <div class="form-group col-md-12">
                                                <label for="Remark">@(_loc.GetLocalizedString("Remark"))</label>
                                                <textarea type="text" class="form-control" id="Remark@(ViewBag.Thread)" rows="3"></textarea>
                                            </div>

                                            <div class="form-group col-md-3" hidden="hidden">
                                                <label >@(_loc.GetLocalizedString("SlipNumberGoodReciep"))</label>
                                                <input type="text" class="form-control" readonly id="SlipNumberGoodReciep@(ViewBag.Thread)">
                                            </div>
                                        </div>
                                    </fieldset>
                                </div>

                                <div class="col-12">
                                    <div id="bdpage_@(ViewBag.Thread)">
                                        <fieldset class="customFieldset" style="height:100%">
                                            <legend class="customLegend">@(_loc.GetLocalizedString("ItemSlipDetail"))</legend>
                                            @{
                                                string gridItemSlipDtlOnCellPrepared = "gridItemSlipDtlOnCellPrepared" + ViewBag.Thread;
                                                string gridItemSlipDtlOnRowRemoved = "gridItemSlipDtlOnRowRemoved" + ViewBag.Thread;
                                                string GridItemSlipDtlSelectionChanged = "GridItemSlipDtlSelectionChanged" + ViewBag.Thread;
                                                string validateQtyInputNumber = "validateQtyInputNumber" + ViewBag.Thread;
                                            }
                                            @(Html.DevExtreme().DataGrid<Modules.Pleiger.Models.MES_ItemSlipDetail>()
                                            .ID(gridItemSlipDtl)
                                            .KeyExpr("ItemCode")
                                            .DataSource(x => x.Mvc().Controller("MESItemSlip")
                                                .LoadAction("GetListMESItemSlipDetailForRelease").LoadParams(new
                                                {
                                                    slipNumber = new JS("getParamsSlipNumberSlt"),
                                                    poNumber =  new JS("getParamsPoNumberSlt")
                                                })
                                                .Key("ItemCode")
                                            )
                                            .ShowBorders(true)
                                            .ShowColumnLines(true)
                                            .ShowRowLines(true)
                                            .AllowColumnResizing(true)
                                            .AllowColumnReordering(true)
                                            .ColumnAutoWidth(true).Height("100%")
                                            .RepaintChangesOnly(false)
                                            .OnCellPrepared(gridItemSlipDtlOnCellPrepared)
                                            .OnRowRemoved(gridItemSlipDtlOnRowRemoved)
                                            //.FilterRow(filterRow => filterRow
                                            //    .Visible(true)
                                            //    .ApplyFilter(GridApplyFilterMode.Auto)
                                            //)
                                            //.HeaderFilter(f => f.Visible(true))
                                            .Selection(s => s.Mode(SelectionMode.Multiple)
                                            .ShowCheckBoxesMode(GridSelectionShowCheckBoxesMode.Always)
                                            .SelectAllMode(SelectAllMode.AllPages))
                                            .Columns(c=> {
                                                c.AddFor(x => x.No).Caption(_loc.GetLocalizedString("No")).AllowEditing(false);
                                                //c.Add().Caption("생산의뢰 코드");
                                                c.AddFor(x => x.ItemCode).Caption(_loc.GetLocalizedString("Item Code")).AllowEditing(false);
                                                c.AddFor(x => x.ItemName).Caption(_loc.GetLocalizedString("Item Name")).AllowEditing(false);
                                                c.AddFor(x => x.Unit).Caption(_loc.GetLocalizedString("Unit")).AllowEditing(false);
                                                c.AddFor(x => x.Qty).Caption(_loc.GetLocalizedString("Return Qty")).Format("#,##0").SetCellValue("SetCellValueQtyReTurn");
                                                //    .ValidationRules(vr =>  {// Qty lúc nhập
                                                //    vr.AddRequired().Message("Required");
                                                //    vr.AddCustom().ValidationCallback(validateQtyInputNumber).Message("");
                                                //});
                                                //c.AddFor(x => x.POQty).Caption(_loc.GetLocalizedString("PO Qty")).AllowEditing(false);
                                                c.AddFor(x => x.DeliverQty).Caption(_loc.GetLocalizedString("Delivered Qty")).AllowEditing(false).Format("#,##0");
                                                c.AddFor(x => x.Cost).Caption(_loc.GetLocalizedString("Item Cost")).Format("#,##0.#0").AllowEditing(false);
                                                c.AddFor(x => x.Amt).Caption(_loc.GetLocalizedString("Amt")).Format("#,##0.#0").AllowEditing(false)
                                                .CalculateCellValue(
                                                    @<text>
                                                            function(data) {
                                                                return data.Amt = data.Qty * data.Cost;
                                                            }
                                                    </text>
                                                );
                                                c.AddFor(x => x.Tax).Caption(_loc.GetLocalizedString("Tax")).Format("#,##0.#0").AllowEditing(false).CalculateCellValue(
                                                    @<text>
                                                            function(data) {
                                                                return data.Tax = data.Amt * 0.1;
                                                            }
                                                    </text>
                                                );
                                                c.AddFor(x => x.TaxAmt).Caption(_loc.GetLocalizedString("TaxAmt")).Format("#,##0.#0").AllowEditing(false).CalculateCellValue(
                                                    @<text>
                                                            function(data) {
                                                                return data.TaxAmt = data.Amt + data.Tax;
                                                            }
                                                    </text>
                                                );
                                                c.AddFor(x => x.Remark).Caption(_loc.GetLocalizedString("Remark"));

                                            })
                                            .RemoteOperations(true)
                                            .Scrolling(s => s
                                                .Mode(GridScrollingMode.Standard)
                                            )
                                            .Editing(e => e
                                                .Mode(GridEditMode.Cell)
                                                .Texts(text => text.ConfirmDeleteMessage(_loc.GetLocalizedString("Are you sure you want to delete this record?")))
                                                //.AllowAdding(true)
                                                .AllowUpdating(true)
                                                .AllowDeleting(true)
                                                .UseIcons(true)
                                            )
                                            .Paging(p => p.PageSize(100))
                                            .Pager(pager =>
                                            {
                                                pager.ShowInfo(true);
                                                pager.ShowNavigationButtons(true);
                                            })
                                            .OnSelectionChanged(GridItemSlipDtlSelectionChanged)
                                        //.Summary(s => s
                                        //    .RecalculateWhileEditing(true)
                                        //    .TotalItems(items => {
                                        //        items.AddFor(x => x.Qty).SummaryType(SummaryType.Sum);

                                        //    })
                                        //)
                                        )
                                        </fieldset>
                                    </div>
                                    
                                </div>

                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>

</div>