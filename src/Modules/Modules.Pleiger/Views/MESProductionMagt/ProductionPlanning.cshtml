@using Modules.Pleiger.Models;
@using InfrastructureCore.Models.Menu
@using Modules.Admin.Models;
@{
    Layout = null;
    SYMenuAccess pageSetting = new SYMenuAccess();
    pageSetting.SEARCH_YN = true;
    pageSetting.CREATE_YN = false;


    List<ToolbarInfo> lstNewToolbar = new List<ToolbarInfo>();
    ToolbarInfo info = new ToolbarInfo();
    info.Name = "Reload";
    info.ID = "btnReload";
    info.Icon = "<i class='fas fa-sync'></i>";
    info.MenuID = ViewBag.MenuID;
    lstNewToolbar.Add(info);
    string ProjectName = "ProjectName" + ViewBag.Thread;
    string ItemCode = "ItemCode" + ViewBag.Thread;
    string ItemName = "ItemName" + ViewBag.Thread;

}
<script>
    $(() => {
        LoadingPage(1);
        ResizePageProductionPlanning();
        LoadingPage(0);
    });
    $("#btnCreate_@(ViewBag.Thread)").on("click", function () {
        LoadingPage(1);
        CheckSession();
        let url = '/MESProductionMagt/ProductionPlanningDetail';
        GenerateTabConmonBoard('CBDetail', url, menuIDoTabActive, false);
        LoadingPage(0);
    });

    function OpenProductionPlanDetail@(ViewBag.Thread)(projectCode) {
        LoadingPage(1);
        CheckSession();
        //let url = '/MESProductionMagt/ProductionPlanningDetail?projectCode=' + projectCode, ?menuid = '@ViewBag.MenuID';
        let url = `/MESProductionMagt/ProductionPlanningDetail?projectCode=${projectCode}&menuid=${@ViewBag.MenuID}`;
        // PushArrayBack(url);
        GenerateTabConmonBoard('CBDetail', url, menuIDoTabActive, false);
        // ReadCountCB@(ViewBag.Thread)(getBoardIDOfCB@(ViewBag.Thread)(), boardDocID);
        LoadingPage(0);
    }

    // Reload tab
    $("#btnReload_@ViewBag.Thread").on("click", function () {
        LoadingPage(1);
        CheckSession();
        RefreshTab(this);
        LoadingPage(0);
    });

    // Search function
    $('#btnSearch_@ViewBag.Thread').on("click", function () {
        LoadingPage(1);
        CheckSession();
        var ProjectName = $('#@ProjectName').dxTextBox('instance').option('value');
        var ItemCode = $('#@ItemCode').dxTextBox('instance').option('value');
        var ItemName = $('#@ItemName').dxTextBox('instance').option('value');
        $.ajax({
            url: '@Url.Action("GetListData", "MESProductionMagt")',
            type: "GET",
            data: {
                projectCode: ProjectName,
                itemCode: ItemCode,
                itemName: ItemName,
                customer: getParamsCustomerSearch()
            },
            dataType: 'json',
            success: function (result) {
                LoadingPage(0);
                var grid = $("#GridProductionPlanning@(ViewBag.Thread)").dxDataGrid("instance");
                grid.option("dataSource", result.data);
                grid.refresh();
            }
        });
        LoadingPage(0);
    });

    function getParamsCustomerSearch() {
        return $("#CustomerSearch@(ViewBag.Thread)").val();
    }

    function getParamsProjectCodeSearch() {
        return $("#ProjectCodeSearch@(ViewBag.Thread)").val();
    }

    function getParamsItemCodeSearch() {
        return $("#ItemCodeSearch@(ViewBag.Thread)").val();
    }

    function getParamsItemNameSearch() {
        return $("#ItemNameSearch@(ViewBag.Thread)").val();
    }

    $(window).resize(function () {
        //$("#headerpage_@(ViewBag.Thread)").resizeddiv();
        ResizePageProductionPlanning();

    });
    function ResizePageProductionPlanning() {
        ReCalResize("divindex_@(ViewBag.Thread)", "ID", "tab-menu-content", "menutoolbar_@(ViewBag.Thread)", "height");
        if (CheckMobiNew()) {
            @*RecalculateResize(0.4, "height", "headerpage_@(ViewBag.Thread)", "divindex_@(ViewBag.Thread)");
            RecalculateResize(0.6, "height", "bodypage_@(ViewBag.Thread)", "divindex_@(ViewBag.Thread)");*@
        }
        else {
            if ($("#divindex_@(ViewBag.Thread)").is(':visible')){
                ReCalResize("bodypage_@(ViewBag.Thread)", "ID", "divindex_@(ViewBag.Thread)", "headerpage_@(ViewBag.Thread)", "height");
                //ReCalResize("contentbody_@(ViewBag.Thread)", "ID", "divindexs_@(ViewBag.Thread)", "topbody_@(ViewBag.Thread)", "height");
                @*RecalculateResize(0.4, "height", "topbody_@(ViewBag.Thread)", "bodypage_@(ViewBag.Thread)");
                RecalculateResize(0.55, "height", "contentbody_@(ViewBag.Thread)", "bodypage_@(ViewBag.Thread)");*@
            }
        }
    }
</script>
<div id="menutoolbar_@(ViewBag.Thread)">
    @await Component.InvokeAsync("AccessToolbar", new { pageSetting = pageSetting, lstNewToolbar = lstNewToolbar, threadID = ViewBag.Thread })
</div>

<div class="row" id="divindex_@(ViewBag.Thread)">
    <div class="col-md-12" style="width:100%;height:100%;">
        <div class="card" style="height:100%">
            <div class="card-header box-profile p-1" id="headerpage_@(ViewBag.Thread)">
                <div class="row" style="height:100%">

                    <div class="form-group col-md-2">
                        <label>@(_loc.GetLocalizedString("Project Name"))</label>
                        @(Html.DevExtreme().TextBox().ID(ProjectName).ShowClearButton(true))
                    </div>
                    <div class="form-group col-md-4">
                        <label>@(_loc.GetLocalizedString("Item Code"))</label>
                        @(Html.DevExtreme().TextBox().ID(ItemCode).ShowClearButton(true))
                    </div>
                    <div class="form-group col-md-4">
                        <label>@(_loc.GetLocalizedString("Item Name"))</label>
                        @(Html.DevExtreme().TextBox().ID(ItemName).ShowClearButton(true))
                    </div>


                </div>

            </div>
            <div id="bodypage_@(ViewBag.Thread)" class="card-body p-0 pl-2 pr-2 pb-2">
                
                        @{
                            string IdGrid = "GridProductionPlanning" + ViewBag.Thread;
                        }
                        @(Html.DevExtreme().DataGrid<MES_SaleProject>()
                        .ID(IdGrid)
                        .DataSource(x => x.Mvc().Controller("MESProductionMagt").LoadAction("GetListData")
                            .LoadParams(
                                new {
                                    projectCode = new JS("getParamsProjectCodeSearch"),
                                    itemCode = new JS("getParamsItemCodeSearch"),
                                    itemName = new JS("getParamsItemNameSearch"),
                                    customer = new JS("getParamsCustomerSearch")
                                }
                            )
                        )
                        .ShowBorders(true)
                        .ShowColumnLines(true)
                        .ShowRowLines(true)
                        .AllowColumnResizing(true)
                        .AllowColumnReordering(true)
                        .ColumnAutoWidth(true).Height("100%")
                        .FilterRow(filterRow => filterRow
                            .Visible(true)
                            .ApplyFilter(GridApplyFilterMode.Auto)
                            )
                        .Columns(c =>
                        {
                            c.AddFor(x => x.No).Caption("No");
                            @*c.AddFor(x => x.ProjectCode).Caption(_loc.GetLocalizedString("Project Code")).CellTemplate(
                                @<text>
                                <a href="#" onclick="OpenProductionPlanDetail@(ViewBag.Thread)('<%-data.ProjectCode%>')" data-pag-id="<%-data.ProjectCode%>">
                                    <%-data.ProjectCode%>
                                </a>
                                </text>
                                );*@
                            c.AddFor(x => x.UserProjectCode).Caption(_loc.GetLocalizedString("UserProjectCode")).CellTemplate(
                                @<text>
                                <a href="#" onclick="OpenProductionPlanDetail@(ViewBag.Thread)('<%-data.ProjectCode%>')" data-pag-id="<%-data.ProjectCode%>">
                                    <%-data.UserProjectCode%>
                                </a>
                                </text>
                                );
                            c.AddFor(x => x.ProjectName).Caption(_loc.GetLocalizedString("Project Name"));
                            c.AddFor(x => x.ProductType).Caption(_loc.GetLocalizedString("Product Type"));
                            c.AddFor(x => x.ItemCode).Caption(_loc.GetLocalizedString("Item Code"));
                            c.AddFor(x => x.ItemName).Caption(_loc.GetLocalizedString("Item Name"));
                            c.AddFor(x => x.RequestDate).Caption(_loc.GetLocalizedString("Production Request Date"));
                            c.AddFor(x => x.PlanDoneDate).Caption(_loc.GetLocalizedString("Planning Done Date")).DataType(GridColumnDataType.Date).Format("yyyy-MM-dd");//Plan Done Date
                            //c.AddFor(x => x.Customer).Caption("Customer");
                            c.AddFor(x => x.UserNameRequest).Caption(_loc.GetLocalizedString("User Request"));

                            //c.Add().Caption(_loc.GetLocalizedString("Request Quantity")); // Request Quantity
                            //c.Add().Caption(_loc.GetLocalizedString("Progress")); // Status
                            //c.Add().Caption(_loc.GetLocalizedString("User Accept")); // Accept User
                            //c.Add().Caption(_loc.GetLocalizedString("Accept Date")); // Accept Date
                            c.AddFor(x => x.ProdcnCode).Caption(_loc.GetLocalizedString("Production Code")).Visible(false);
                            c.AddFor(x => x.OrderQuantity).Caption(_loc.GetLocalizedString("Order Quantity")).Format("#,##0");
                            //c.AddFor(x => x.ProdcnDoneQty).Caption(_loc.GetLocalizedString("Production Done Quantity")).Format("#,##0");//Total Quantity
                            //c.AddFor(x => x.ProdcnStartDate).Caption("시작일").DataType(GridColumnDataType.Date).Format("yyyy-MM-dd");//Start Date
                            //c.AddFor(x => x.ProdcnDoneDate).Caption("종료일").DataType(GridColumnDataType.Date).Format("yyyy-MM-dd");//End Date
                            //c.AddFor(x => x.DeliveryLocation).Caption("이동위치");//Delivery Location
                            //c.AddFor(x => x.PartnerName).Caption("수락자");
                            //c.AddFor(x => x.OrderNumber).Caption("고객주문번호");
                            //c.AddFor(x => x.DomesticForeign).Caption("거래지역");
                            //c.AddFor(x => x.OrderQuantity).Caption("받은 주문수량");
                            //c.AddFor(x => x.AppliedExchRate).Caption("수주환산금액(KRW)");
                            //c.AddFor(x => x.OrderTeamCode).Caption("수주부서");
                            //c.AddFor(x => x.RequestUserId).Caption("작성자");
                        })
                        .Scrolling(s => s.Mode(GridScrollingMode.Standard))
                        .HeaderFilter(f => f.Visible(true))
                        .Paging(paging => paging.PageSize(100))
                        .Pager(pager =>
                        {
                            //pager.ShowPageSizeSelector(false);
                            //pager.AllowedPageSizes(new[] { 20, 50, 100 });
                            pager.ShowNavigationButtons(true);
                            pager.ShowInfo(true);
                        })
                        //.OnRowDblClick("ShowCreateSalesProjectPopup")
                        // .OnRowClick("SelectRowSalesProject")
                        )
                   
            </div>
        </div>
    </div>
    
            
</div>